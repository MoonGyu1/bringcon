{"version":3,"sources":["components/views/VerticalMenu/flag.png","components/views/NavBar/Sections/logo.svg","_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/sections/LoginGoogle.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Progress/Progress.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/LandingPage/HashTagPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/utils/Payment.js","components/views/CartPage/CartPage.js","components/views/VerticalMenu/VerticalMenu.js","components/views/HistoryPage/HistoryPage.js","components/views/Chatbot/Chat.js","components/views/Board/BoardForm.js","components/views/Board/BodyPage.js","components/views/Board/BoardWriteForm.js","components/views/Board/BoardDetail.js","components/views/MyPage/AddAccount.js","components/views/MyPage/MyPage.js","components/views/LandingPage/UserVideos.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["module","exports","registerUser","dataToSubmit","type","payload","axios","post","then","response","data","loginUser","auth","get","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","key","list","map","value","index","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","RadioBox","Value","setValue","Group","event","target","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","onfocus","onblur","currentTarget","refreshFunction","style","width","height","borderRadius","genres","price","LandingPage","Products","setProducts","Skip","setSkip","setPostSize","Filters","getProducts","skip","body","success","productInfo","postSize","alert","handleMouseover","e","play","handleMouseout","pause","currentTime","renderCards","product","className","id","backgroundImage","s3thumbnail","href","src","filePath","onMouseOver","onMouseOut","muted","avatar","writer","image","title","toLocaleString","paddingTop","borderTop","display","justifyContent","paddingBottom","margin","backgroundColor","newSearchTerm","filters","searchTerm","padding","withRouter","res","a","accessToken","items","catch","err","console","log","getChannelId","channelId","profile","getBasicProfile","email","getEmail","getImageUrl","getName","loginSuccess","setTimeout","clientId","buttonText","onSuccess","onFailure","cookiePolicy","scope","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","initialValues","lastName","password","confirmPassword","validationSchema","Yup","shape","required","min","oneOf","onSubmit","values","setSubmitting","lastname","moment","unix","errmsg","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","minWidth","Item","label","onBlur","hasFeedback","validateStatus","onClick","disabled","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","border","userData","color","count","cart","length","zIndex","status","Swal","fire","NavBar","visible","setVisible","position","Logo","marginTop","marginRight","placement","closable","onClose","Progress","percentage","role","TextArea","Genres","UploadProductPage","Title","setTitle","Description","setDescription","Price","setPrice","Genre","setGenre","Images","setImages","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","S3thumbnailPath","setS3thumbnailPath","Tags","setTags","progress","setProgress","maxWidth","textAlign","marginBottom","preventDefault","description","images","duration","thumbnail","tags","Axios","onDrop","files","formData","FormData","config","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","append","variable","fileName","s3VideoPath","fileDuration","s3FilePath","multiple","newImages","getRootProps","getInputProps","alignItems","fontSize","alt","item","tag","indexToRemove","filter","_","onKeyUp","keyCode","trim","ProductInfo","detail","sold","views","size","productId","addToCart","DetailProductPage","match","params","Product","setProduct","DetailTemplate","styled","div","gutter","lg","ratio","controls","controlsList","HashTagPage","Limit","PostSize","setFilters","Tag","limit","loadMore","md","overflow","top","left","fontWeight","float","category","newFilters","priceValues","array","handlePrice","showFilteredResults","UserCardBlock","products","quantity","removeItem","Payment","MerchantId","setMerchantId","OrderName","setOrderName","PG","setPG","PayMethod","setPayMethod","Amount","setAmount","BuyerTel","setBuyerTel","BuyerName","setBuyerName","BuyerEmail","setBuyerEmail","Saved","setSaved","callback","rsp","jQuery","ajax","url","method","dataType","headers","JSON","stringify","imp_uid","merchant_uid","error","done","payment","error_msg","IMP","window","init","param","pg","pay_method","amount","buyer_name","buyer_tel","buyer_email","m_redirect_url","request_pay","dataToSave","payMethod","buyerId","buyerName","buyerEmail","merchantId","orderName","buyerTel","saveOrder","CartPage","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","forEach","userCart","cartItem","productDetail","getCartItems","calculateTotal","cartDetail","handleOptionChange","changeEvent","removeCartItem","onSuccessBuy","paymentData","VerticalMenu","$","each","location","this","addClass","class","Flag","HistoryPage","merchantUid","dateOfPurchase","product_id","handleClick","CommunicationChat","d","m","s","document","createElement","async","getElementsByTagName","appendChild","kommunicate","_globals","Component","BoardRow","createdAt","substring","to","pathname","query","BoardForm","getBoardList","returnData","boardList","Date","now","random","setState","boardLists","colSpan","Table","React","BodyPage","BoardWriteForm","Content","setContent","undefined","content","hasOwnProperty","divStyle","Form","Control","initData","editor","getData","Button","block","BoardDetail","deleteBoard","send_param","confirm","getDetail","board","storeUser","isSame","striped","bordered","hover","dangerouslySetInnerHTML","__html","bind","connect","Banks","AddAccount","Bank","setBank","Number","setNumber","Holder","setHolder","accountHolder","accountNumber","MyPage","UserVideos","userId","App","fallback","minHeight","exact","path","component","Auth","LoginPage","Boolean","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,0CCA3CD,EAAOC,QAAU,IAA0B,kC,+uECepC,SAASC,EAAaC,GAIzB,MAAO,CACHC,KCnBqB,gBDoBrBC,QALYC,IAAMC,KAAN,UEfO,aFeP,aAAsCJ,GACjDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,SAASC,EAAUR,GAItB,MAAO,CACHC,KClCkB,aDmClBC,QALYC,IAAMC,KAAN,UE7BO,aF6BP,UAAmCJ,GAC9CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,SAASE,IAIZ,MAAO,CACHR,KC1CiB,YD2CjBC,QALYC,IAAMO,IAAN,UEvCO,aFuCP,UACXL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,YG9BpB,WAAUI,EAAmBC,GAA4B,IAApBC,EAAmB,uDAAN,KAC7D,SAASC,EAAoBC,GAEzB,IAAIC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAAWC,cA2BjB,OAzBAC,qBAAU,WAENF,EAASV,KAAQJ,MAAK,SAAAC,GAEbA,EAASJ,QAAQoB,QAOdT,IAAeP,EAASJ,QAAQqB,UAKjB,IAAXX,IAJJG,EAAMS,QAAQC,KAAK,KAPnBb,GACAG,EAAMS,QAAQC,KAAK,eAiBhC,IAGC,kBAACd,EAAD,iBAAuBI,EAAvB,CAA8BC,KAAMA,KAG5C,OAAOF,G,oEC3CHY,EAAUC,IAAVD,MA8COE,MA5Cf,SAAkBb,GAAQ,IAAD,EAESc,mBAAS,IAFlB,mBAEdC,EAFc,KAELC,EAFK,KA+BrB,OACI,6BACI,kBAAC,IAAD,CAAUC,iBAAkB,CAAC,MACzB,kBAACN,EAAD,CAAOO,OAAO,SAASC,IAAI,KAXLnB,EAAMoB,MAAQpB,EAAMoB,KAAKC,KAAI,SAACC,EAAOC,GAAR,OAC3D,kBAAC,IAAMC,SAAP,CAAgBL,IAAKI,GACjB,kBAAC,IAAD,CAAUE,SAAU,kBArBP,SAACH,GAElB,IAAMI,EAAeX,EAAQY,QAAQL,GAE/BM,EAAU,YAAOb,IAGD,IAAlBW,EACAE,EAAWlB,KAAKY,GAGhBM,EAAWC,OAAOH,EAAc,GAEpCV,EAAWY,GACX5B,EAAM8B,cAAcF,GAOUG,CAAaT,EAAMU,MACzCC,SAAyC,IAAhClB,EAAQY,QAAQL,EAAMU,OACnC,8BAAOV,EAAMY,c,SC7BjBvB,EAAUC,IAAVD,MAkCOwB,MA/Bf,SAAkBnC,GAAQ,IAAD,EAEKc,mBAAS,GAFd,mBAEdsB,EAFc,KAEPC,EAFO,KAgBrB,OACI,6BACI,kBAAC,IAAD,CAAUpB,iBAAkB,CAAC,MACzB,kBAAC,EAAD,CAAOC,OAAO,QAAQC,IAAI,KAEtB,kBAAC,IAAMmB,MAAP,CAAab,SAVR,SAACc,GAClBF,EAASE,EAAMC,OAAOlB,OACtBtB,EAAM8B,cAAcS,EAAMC,OAAOlB,QAQgBA,MAAOc,GAfxDpC,EAAMoB,MAAQpB,EAAMoB,KAAKC,KAAI,SAAAC,GAAK,OAC9B,kBAAC,IAAD,CAAOH,IAAKG,EAAMU,IAAKV,MAAOA,EAAMU,KAApC,IAA2CV,EAAMY,KAAjD,a,SCRJO,G,OAAWC,IAAXD,QAyBOE,MAvBf,SAAuB3C,GAAQ,IAAD,EAEUc,mBAAS,IAFnB,mBAEnB8B,EAFmB,KAEPC,EAFO,KAS1B,OACI,6BACI,kBAACJ,EAAD,CACIK,YAAY,8GACZC,QAAQ,wBACRC,OAAO,uCACPvB,SAXU,SAACc,GACnBM,EAAcN,EAAMU,cAAc3B,OAClCtB,EAAMkD,gBAAgBX,EAAMU,cAAc3B,QAUlC6B,MAAO,CAAEC,MAAO,IAAKC,OAAQ,OAAQC,aAAc,SACnDhC,MAAOsB,MCxBjBW,EAAS,CACX,CACI,IAAO,EACP,KAAQ,iDAEZ,CACI,IAAO,EACP,KAAQ,yCAEZ,CACI,IAAO,EACP,KAAQ,sBAEZ,CACI,IAAO,EACP,KAAQ,gBAEZ,CACI,IAAO,EACP,KAAQ,sBAEZ,CACI,IAAO,EACP,KAAQ,gBAEZ,CACI,IAAO,EACP,KAAQ,uBAKVC,EAAQ,CACV,CACI,IAAO,EACP,KAAQ,eACR,MAAS,IAEb,CACI,IAAO,EACP,KAAQ,6BACR,MAAS,CAAC,EAAG,OAEjB,CACI,IAAO,EACP,KAAQ,wBACR,MAAS,CAAC,IAAO,QAErB,CACI,IAAO,EACP,KAAQ,wBACR,MAAS,CAAC,IAAO,QAErB,CACI,IAAO,EACP,KAAQ,6BACR,MAAS,CAAC,IAAO,Q,gBCwJVC,MApMf,WAAwB,IAAD,EACW3C,mBAAS,IADpB,mBACd4C,EADc,KACJC,EADI,OAEG7C,mBAAS,GAFZ,mBAEd8C,EAFc,KAERC,EAFQ,OAGW/C,mBAAS,GAHpB,mBAGJgD,GAHI,aAIShD,mBAAS,CACrCyC,OAAQ,GACRC,MAAO,KANY,mBAIdO,EAJc,aAQejD,mBAAS,KARxB,mBAQF+B,GARE,WAWrBvC,qBAAU,WAIR0D,EAHW,CACTC,KAAML,MAGP,IAGH,IAAMI,EAAc,SAACE,GACnB9E,IAAMC,KAAK,wBAAyB6E,GAAM5E,MAAK,SAACC,GAC1CA,EAASC,KAAK2E,SAChBR,EAAYpE,EAASC,KAAK4E,aAC1BN,EAAYvE,EAASC,KAAK6E,WAE1BC,MAAM,gGAKZ,SAASC,EAAgBC,GACvBA,EAAEvB,cAAcwB,OAGlB,SAASC,EAAeF,GACtBA,EAAEvB,cAAc0B,QAChBH,EAAEvB,cAAc2B,YAAc,EAGhC,IAAMC,EAAcnB,EAASrC,KAAI,SAACyD,EAASvD,GACzC,OACE,yBAAKJ,IAAKI,EAAOwD,UAAU,QAEzB,yBACEC,GAAG,aACH7B,MAAO,CAAE8B,gBAAgB,OAAD,OAASH,EAAQI,YAAjB,OAExB,uBAAGC,KAAI,mBAAcL,EAAQ9C,MAC3B,2BACEoD,IAAG,UAAKN,EAAQO,UAChBC,YAAaf,EACbgB,WAAYb,EACZc,OAAK,MAIX,yBAAKR,GAAG,eACN,kBAAC,IAAD,CACES,OACE,uBAAGN,KAAI,kBAAaL,EAAQY,OAAO1D,MACjC,kBAAC,IAAD,CAAQoD,IAAKN,EAAQY,OAAOC,SAGhCC,MAAOd,EAAQc,QAEjB,uBAAGT,KAAI,kBAAaL,EAAQY,OAAO1D,MACjC,8BAAO8C,EAAQY,OAAOxD,OAExB,0BAAM8C,GAAG,cAAT,UAA0BF,EAAQtB,MAAMqC,eACtC,SADF,YAGA,kCAwDR,OACE,yBACEb,GAAG,UACH7B,MAAO,CAAEC,MAAO,OAAQ0C,WAAY,MAAOC,UAAW,YAgBtD,yBACE5C,MAAO,CACL6C,QAAS,OACTC,eAAgB,SAChBC,cAAe,MACfC,OAAQ,WACRC,gBAAiB,YAGnB,kBAAC,EAAD,CAAelD,gBA1CI,SAACmD,GACxB,IAAInC,EAAO,CACTD,KAAM,EACNqC,QAASvC,EACTwC,WAAYF,GAGdxC,EAAQ,GAGRhB,EAAcwD,GACdrC,EAAYE,MAgCR,8BAEF,6BACE,yBACEf,MAAO,CACL6C,QAAS,OACTC,eAAgB,SAChBO,QAAS,WACTJ,gBAAiB,YAGnB,0BAAMpB,GAAG,QAAT,gBACA,0BAAMA,GAAG,QAAT,gBACA,0BAAMA,GAAG,QAAT,4BACA,0BAAMA,GAAG,QAAT,iBAEF,yBACEA,GAAG,QACH7B,MAAO,CACL6C,QAAS,OACTC,eAAgB,WAChBO,QAAS,WACTJ,gBAAiB,YAGnB,0BAAMpB,GAAG,YAAT,gBACA,0BAAMA,GAAG,YAAT,wBAKJ,yBAAKA,GAAG,oBAAoB7B,MAAO,CAAEE,OAAO,SAE1C,kBAAC,IAAD,KAAmBwB,M,sDC7HZ4B,mBAnEf,SAAqBzG,GACnB,IAAMI,EAAWC,cADS,4CAQ1B,WAAyBqG,GAAzB,qBAAAC,EAAA,sEAC6BvH,IACxBO,IADwB,wFAE0D+G,EAAIE,cAEtFtH,MAAK,SAACC,GACL,OAAOA,EAASC,KAAKqH,SAEtBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MARhC,OACQG,EADR,OAUQC,EAAYD,EAEZE,EAAUV,EAAIW,kBAEdpI,EAAe,CACnBqI,MAAOF,EAAQG,WACf5B,MAAOyB,EAAQI,cACftF,KAAMkF,EAAQK,UACdN,UAAWA,GAGb/G,EAASpB,EAAaC,IAAeK,MAAK,SAACC,GACrCA,EAASJ,QAAQgF,SACnBG,MAAM,mGAERlE,EAASX,EAAUR,IAChBK,MAAK,SAACC,GACLyH,QAAQC,IAAI1H,GACRA,EAASJ,QAAQuI,eACnBpD,MAAM,mCACNtE,EAAMS,QAAQC,KAAK,SAGtBoG,OAAM,WACLa,YAAW,WACTX,QAAQC,IAAI,YACX,WApCX,4CAR0B,sBAqD1B,OACE,6BACE,kBAAC,cAAD,CACEW,SApDJ,2EAqDIC,WAAW,oBACXC,UA1DoB,4CA2DpBC,UAVY,SAACrB,GACjBpC,MAAM,mGAUF0D,aAAc,qBACdC,MAvDQ,yDCIDxB,mBAff,WACE,OAEE,6BACE,wMAEE,6BAFF,yJAMA,kBAAC,EAAD,U,sDCDAyB,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA2KCC,MAtKf,SAAsB1I,GACpB,IAAMI,EAAWC,cACjB,OAEE,kBAAC,IAAD,CACEsI,cAAe,CACbrB,MAAO,GACPsB,SAAU,GACV1G,KAAM,GACN2G,SAAU,GACVC,gBAAiB,IAEnBC,iBAAkBC,MAAaC,MAAM,CACnC/G,KAAM8G,MACHE,SAAS,oBACZN,SAAUI,MACPE,SAAS,yBACZ5B,MAAO0B,MACJ1B,MAAM,oBACN4B,SAAS,qBACZL,SAAUG,MACPG,IAAI,EAAG,0CACPD,SAAS,wBACZJ,gBAAiBE,MACdI,MAAM,CAACJ,IAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAEdG,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnB5B,YAAW,WAET,IAAI1I,EAAe,CACjBqI,MAAOgC,EAAOhC,MACduB,SAAUS,EAAOT,SACjB3G,KAAMoH,EAAOpH,KACbsH,SAAUF,EAAOE,SACjB7D,MAAM,8BAAD,OAAgC8D,MAASC,OAAzC,iBAGPtJ,EAASpB,EAAaC,IAAeK,MAAK,SAAAC,GACpCA,EAASJ,QAAQgF,QACnBnE,EAAMS,QAAQC,KAAK,UAEnB4D,MAAM/E,EAASJ,QAAQ4H,IAAI4C,WAI/BJ,GAAc,KACb,QAGJ,SAAAvJ,GAAU,IAEPsJ,EASEtJ,EATFsJ,OACAM,EAQE5J,EARF4J,QACAC,EAOE7J,EAPF6J,OAEAC,EAKE9J,EALF8J,aACAC,EAIE/J,EAJF+J,aACAC,EAGEhK,EAHFgK,WACAC,EAEEjK,EAFFiK,aAGF,OACE,yBAAKlF,UAAU,OACb,uCACA,kBAAC,IAAD,eAAM5B,MAAO,CAAE+G,SAAU,UAAehC,EAAxC,CAAwDmB,SAAUY,IAEhE,kBAAC,IAAKE,KAAN,CAAWjB,UAAQ,EAACkB,MAAM,QACxB,kBAAC,IAAD,CACEpF,GAAG,OACHlC,YAAY,kBACZ5D,KAAK,OACLoC,MAAOgI,EAAOpH,KACdT,SAAUsI,EACVM,OAAQL,EACRjF,UACE8E,EAAO3H,MAAQ0H,EAAQ1H,KAAO,mBAAqB,eAGtD2H,EAAO3H,MAAQ0H,EAAQ1H,MACtB,yBAAK6C,UAAU,kBAAkB8E,EAAO3H,OAI5C,kBAAC,IAAKiI,KAAN,CAAWjB,UAAQ,EAACkB,MAAM,aACxB,kBAAC,IAAD,CACEpF,GAAG,WACHlC,YAAY,uBACZ5D,KAAK,OACLoC,MAAOgI,EAAOV,SACdnH,SAAUsI,EACVM,OAAQL,EACRjF,UACE8E,EAAOjB,UAAYgB,EAAQhB,SAAW,mBAAqB,eAG9DiB,EAAOjB,UAAYgB,EAAQhB,UAC1B,yBAAK7D,UAAU,kBAAkB8E,EAAOjB,WAI5C,kBAAC,IAAKuB,KAAN,CAAWjB,UAAQ,EAACkB,MAAM,QAAQE,aAAW,EAACC,eAAgBV,EAAOvC,OAASsC,EAAQtC,MAAQ,QAAU,WACtG,kBAAC,IAAD,CACEtC,GAAG,QACHlC,YAAY,mBACZ5D,KAAK,QACLoC,MAAOgI,EAAOhC,MACd7F,SAAUsI,EACVM,OAAQL,EACRjF,UACE8E,EAAOvC,OAASsC,EAAQtC,MAAQ,mBAAqB,eAGxDuC,EAAOvC,OAASsC,EAAQtC,OACvB,yBAAKvC,UAAU,kBAAkB8E,EAAOvC,QAI5C,kBAAC,IAAK6C,KAAN,CAAWjB,UAAQ,EAACkB,MAAM,WAAWE,aAAW,EAACC,eAAgBV,EAAOhB,UAAYe,EAAQf,SAAW,QAAU,WAC/G,kBAAC,IAAD,CACE7D,GAAG,WACHlC,YAAY,sBACZ5D,KAAK,WACLoC,MAAOgI,EAAOT,SACdpH,SAAUsI,EACVM,OAAQL,EACRjF,UACE8E,EAAOhB,UAAYe,EAAQf,SAAW,mBAAqB,eAG9DgB,EAAOhB,UAAYe,EAAQf,UAC1B,yBAAK9D,UAAU,kBAAkB8E,EAAOhB,WAI5C,kBAAC,IAAKsB,KAAN,CAAWjB,UAAQ,EAACkB,MAAM,UAAUE,aAAW,GAC7C,kBAAC,IAAD,CACEtF,GAAG,kBACHlC,YAAY,6BACZ5D,KAAK,WACLoC,MAAOgI,EAAOR,gBACdrH,SAAUsI,EACVM,OAAQL,EACRjF,UACE8E,EAAOf,iBAAmBc,EAAQd,gBAAkB,mBAAqB,eAG5Ee,EAAOf,iBAAmBc,EAAQd,iBACjC,yBAAK/D,UAAU,kBAAkB8E,EAAOf,kBAI5C,kBAAC,IAAKqB,KAAS3B,EACb,kBAAC,IAAD,CAAQgC,QAASP,EAAc/K,KAAK,UAAUuL,SAAUX,GAAxD,iB,SC3LVY,EAAUC,IAAKD,QACfE,GAAgBD,IAAKE,UAuBZC,OArBf,SAAkB9K,GAChB,OACE,kBAAC,IAAD,CAAM+K,KAAM/K,EAAM+K,KAAM5H,MAAO,CAAEiD,gBAAiB,YAChD,kBAACsE,EAAD,CAAS9E,MAAO,uCAAoBzC,MAAO,CAAE6H,OAAQ,IACnD,kBAACJ,GAAD,CAAehF,MAAM,UACnB,kBAAC,IAAKuE,KAAN,CAAWhJ,IAAI,aAAf,YACA,kBAAC,IAAKgJ,KAAN,CAAWhJ,IAAI,aAAf,aAEF,kBAACyJ,GAAD,CAAehF,MAAM,SACnB,kBAAC,IAAKuE,KAAN,CAAWhJ,IAAI,aACb,uBAAGgE,KAAK,UAAR,6BAEF,kBAAC,IAAKgF,KAAN,CAAWhJ,IAAI,aACb,uBAAGgE,KAAK,gBAAR,2B,sCC0DGsB,oBAjEf,SAAmBzG,GACjB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAY1C,OAAIA,EAAKgL,WAAahL,EAAKgL,SAAS1K,OAEhC,kBAAC,IAAD,CAAMwK,KAAM/K,EAAM+K,KAAM5H,MAAO,CAAEiD,gBAAiB,YAChD,kBAAC,IAAK+D,KAAN,CAAWhJ,IAAI,QACb,gCACE,uBAAGgE,KAAK,UAAR,YAON,kBAAC,IAAD,CAAM4F,KAAM/K,EAAM+K,KAAM5H,MAAO,CAAEiD,gBAAiB,YAEhD,kBAAC,IAAK+D,KAAN,CAAWhJ,IAAI,SACb,uBAAGgE,KAAK,IAAIhC,MAAO,CAAE+H,MAAO,YAA5B,UAKF,kBAAC,IAAKf,KAAN,CAAWhJ,IAAI,WACb,uBAAGgE,KAAK,gBAAgBhC,MAAO,CAAE+H,MAAO,YAAxC,YAKF,kBAAC,IAAKf,KAAN,CAAWhJ,IAAI,UACb,uBAAGgE,KAAK,kBAAkBhC,MAAO,CAAE+H,MAAO,YAA1C,WAIF,kBAAC,IAAKf,KAAN,CAAWnF,GAAG,OAAO7D,IAAI,QACvB,kBAAC,KAAD,CACEgK,MAAOlL,EAAKgL,UAAYhL,EAAKgL,SAASG,KAAKC,OAC3ClI,MAAO,CAAEmI,OAAQ,IAEjB,uBAAGnG,KAAK,aAAahC,MAAO,CAAE+H,MAAO,YAArC,UAMJ,kBAAC,IAAKf,KAAN,CAAWhJ,IAAI,UACb,uBAAGqJ,QArDW,WACpBpL,IAAMO,IAAN,UXduB,aWcvB,YAAmCL,MAAK,SAACC,GACf,MAApBA,EAASgM,OACXvL,EAAMS,QAAQC,KAAK,UAEnB8K,KAAKC,KAAK,UAAW,iEAAgB,aAgDRtI,MAAO,CAAE+H,MAAO,YAA3C,gB,wCCTKQ,OAnDf,WAAmB,IAAD,EACc5K,oBAAS,GADvB,mBACT6K,EADS,KACAC,EADA,KAWhB,OACE,yBACE7G,UAAU,OACV5B,MAAO,CAAE0I,SAAU,QAASP,OAAQ,EAAGlI,MAAO,SAE9C,uBAAG+B,KAAK,KACR,yBAAKJ,UAAU,cACb,yBAAKK,IAAK0G,KAAM3I,MAAO,CAAE4I,UAAW,OAAQC,YAAa,YAG3D,yBAAKjH,UAAU,mBACb,yBAAKA,UAAU,aACb,kBAAC,GAAD,CAAUgG,KAAK,gBAEjB,yBAAKhG,UAAU,cACb,kBAAC,GAAD,CAAWgG,KAAK,gBAElB,kBAAC,IAAD,CACEhG,UAAU,sBACV7F,KAAK,UACLsL,QA5BW,WACjBoB,GAAW,KA6BL,kBAAC,KAAD,CAAM1M,KAAK,iBAEb,kBAAC,KAAD,CACE0G,MAAM,eACNqG,UAAU,QACVlH,UAAU,cACVmH,UAAU,EACVC,QAjCQ,WACdP,GAAW,IAiCLD,QAASA,GAET,kBAAC,GAAD,CAAUZ,KAAK,WACf,kBAAC,GAAD,CAAWA,KAAK,eC5BXqB,I,OAnBE,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACf,OACI,yBAAKtH,UAAU,aACX,yBAAKA,UAAU,QAAQsH,EAAvB,KACA,yBAAKtH,UAAU,YACf,yBAAKA,UAAU,MACXuH,KAAK,cACLnJ,MAAO,CAACC,MAAM,GAAD,OAAKiJ,EAAL,OAChBA,EAHD,S,UCFJE,I,OAAa7J,IAAb6J,UAEFC,GAAS,CACb,CAAErL,IAAK,EAAGG,MAAO,iDACjB,CAAEH,IAAK,EAAGG,MAAO,yCACjB,CAAEH,IAAK,EAAGG,MAAO,sBACjB,CAAEH,IAAK,EAAGG,MAAO,gBACjB,CAAEH,IAAK,EAAGG,MAAO,sBACjB,CAAEH,IAAK,EAAGG,MAAO,gBACjB,CAAEH,IAAK,EAAGG,MAAO,uBAqRJmL,OAlRf,SAA2BzM,GACzB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QADV,EAENa,mBAAS,IAFH,mBAEzB4L,EAFyB,KAElBC,EAFkB,OAGM7L,mBAAS,IAHf,mBAGzB8L,EAHyB,KAGZC,EAHY,OAIN/L,mBAAS,GAJH,mBAIzBgM,EAJyB,KAIlBC,EAJkB,OAKNjM,mBAAS,GALH,mBAKzBkM,EALyB,KAKlBC,EALkB,OAMJnM,mBAAS,IANL,mBAMzBoM,EANyB,KAMjBC,EANiB,OAOArM,mBAAS,IAPT,mBAOzBsM,EAPyB,KAOfC,EAPe,OAQAvM,mBAAS,IART,mBAQzBwM,EARyB,KAQfC,EARe,OASUzM,mBAAS,IATnB,mBASzB0M,EATyB,KASVC,EATU,OAUc3M,mBAAS,IAVvB,mBAUzB4M,EAVyB,KAURC,EAVQ,OAWR7M,mBAAS,IAXD,mBAWzB8M,EAXyB,KAWnBC,EAXmB,OAYA/M,mBAAS,GAZT,mBAYzBgN,EAZyB,KAYfC,EAZe,KAoJhC,OACE,yBAAK5K,MAAO,CAAE6K,SAAU,QAAS7H,OAAQ,cACvC,yBAAKhD,MAAO,CAAE8K,UAAW,SAAUC,aAAc,SAC/C,wEAGF,kBAAC,IAAD,CAAM7E,SA/CY,SAAC9G,GAGrB,GAFAA,EAAM4L,kBAEDzB,IAAUE,IAAgBE,IAAUE,GAA2B,IAAlBE,EAAO7B,OACvD,OAAO/G,MAAM,iFAKf,IAAMJ,EAAO,CAEXwB,OAAQzF,EAAKgL,SAASjJ,IACtB4D,MAAO8G,EACP0B,YAAaxB,EACbpJ,MAAOsJ,EACPuB,OAAQnB,EACR3J,OAAQyJ,EACR3H,SAAU+H,EACVkB,SAAUhB,EACViB,UAAWf,EACXtI,YAAawI,EACbc,KAAMZ,GAGRa,IAAMpP,KAAK,eAAgB6E,GAAM5E,MAAK,SAACC,GACjCA,EAASC,KAAK2E,SAChBG,MAAM,gFACNtE,EAAMS,QAAQC,KAAK,MAEnB4D,MAAM,qFAmBN,yBAAKnB,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,kBAE7C,kBAAC,KAAD,CACEyI,OAnGU,SAACC,GACnBZ,EAAY,GACZ,IAAIa,EAAW,IAAIC,SACbC,EAAS,CACb5N,OAAQ,CAAE,eAAgB,uBAE1B6N,iBAAkB,SAAAC,GAChBjB,EACEkB,SACEC,KAAKC,MAA8B,IAAvBH,EAAcI,OAAgBJ,EAAcK,WAMhET,EAASU,OAAO,OAAQX,EAAM,IAE9BF,IAAMpP,KAAK,qBAAsBuP,EAAUE,GAAQxP,MAAK,SAACC,GACvD,GAAIA,EAASC,KAAK2E,QAAS,CACzB,IAAIoL,EAAW,CACblK,SAAU9F,EAASC,KAAK6F,SACxBmK,SAAUjQ,EAASC,KAAKgQ,UAG1BnC,EAAY9N,EAASC,KAAKiQ,aAE1BhB,IAAMpP,KAAK,yBAA0BkQ,GAAUjQ,MAAK,SAACC,GAC/CA,EAASC,KAAK2E,SAChBoJ,EAAYhO,EAASC,KAAKkQ,cAC1BjC,EAAiBlO,EAASC,KAAK6F,UAC/BsI,EAAmBpO,EAASC,KAAKmQ,YACjCxC,GAAU,SAACD,GAAD,4BAAgBA,GAAhB,CAAwB3N,EAASC,KAAK6F,gBAEhD0I,EAAY,GACZzJ,MAAM,uFAIe,uBAAtB/E,EAASC,KAAKuH,IACfzC,MAAM,+EAENA,MAAM,2FAERyJ,EAAY,OAyDR6B,UAAU,EAEV1M,gBAzHW,SAAC2M,GACpB1C,EAAU0C,MA0HD,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,uCACE5M,MAAO,CACLC,MAAO,IACPC,OAAQ,IACR2H,OAAQ,sBACRhF,QAAS,OACTgK,WAAY,SACZ/J,eAAgB,WAEd6J,KAEJ,0BAAWC,KACX,kBAAC,KAAD,CAAM7Q,KAAK,OAAOiE,MAAO,CAAE8M,SAAU,cAiC1CvC,GACC,6BACE,yBACEtI,IAAG,UAAKsI,GACRwC,IAAI,gBAKZ,kBAAC,GAAD,CAAU7D,WAAYyB,IACtB,6BACA,6BACA,+CACA,kBAAC,IAAD,CAAOrM,SAtMc,SAACc,GAC1BoK,EAASpK,EAAMU,cAAc3B,QAqMYA,MAAOoL,IAC5C,6BACA,6BACA,+CACA,kBAACH,GAAD,CAAU9K,SAtMiB,SAACc,GAChCsK,EAAetK,EAAMU,cAAc3B,QAqMeA,MAAOsL,IACrD,6BACA,6BACA,uDACA,kBAAC,IAAD,CAAO1N,KAAK,SAASuC,SAtMA,SAACc,GAC1BwK,EAASxK,EAAMU,cAAc3B,QAqM0BA,MAAOwL,IAC1D,6BACA,+CACA,6BACA,4BAAQrL,SAtMa,SAACc,GAC1B0K,EAAS1K,EAAMU,cAAc3B,QAqMaA,MAAO0L,GAC1CR,GAAOnL,KAAI,SAAC8O,GAAD,OACV,4BAAQhP,IAAKgP,EAAKhP,IAAKG,MAAO6O,EAAKhP,KAChC,IACAgP,EAAK7O,WAIZ,6BACA,+CACA,6BACA,yBAAKyD,UAAU,OACb,yBAAKA,UAAU,cACb,4BACG6I,EAAKvM,KAAI,SAAC+O,EAAK7O,GAAN,OACR,wBAAIJ,IAAKI,EAAOwD,UAAU,OACxB,8BAAOqL,GACP,0BACErL,UAAU,iBACVyF,QAAS,kBA/OP6F,EA+OwB9O,OA9O1CsM,EAAQD,EAAK0C,QAAO,SAACC,EAAGhP,GAAJ,OAAcA,IAAU8O,MAD3B,IAACA,IA6OJ,UASN,2BACEnR,KAAK,OACL4D,YAAY,kHACZ0N,QAAS,SAAChM,GAAD,OAAsB,KAAdA,EAAEiM,aArPP,MADPlO,EAsPuCiC,GArP5CiM,SAAyC,KAAvBlO,EAAMC,OAAOlB,QACvCuM,EAAQ,GAAD,mBAAKD,GAAL,CAAWrL,EAAMC,OAAOlB,MAAMoP,UACrCnO,EAAMC,OAAOlB,MAAQ,KAmPoC,KAtP7C,IAACiB,OA0PX,4BAAQiI,QA/NO,SAACjI,GACpBA,EAAM4L,iBACNhB,EAAU,IACVE,EAAY,IACZE,EAAY,IACZE,EAAiB,IACjBd,EAAS,IACTE,EAAe,IACfE,EAAS,GACTE,EAAS,GACTY,EAAQ,IACRE,EAAY,GACZzJ,MAAM,uDAmNF,sBACA,4BAAQpF,KAAK,UAAb,mB,oBC9OOyR,OA5Cf,SAAqB3Q,GACnB,IAAMI,EAAWC,cAQjB,OACE,6BACE,kBAAC,KAAD,CAAcuF,MAAM,gBAClB,kBAAC,KAAauE,KAAd,CAAmBC,MAAM,SACtBpK,EAAM4Q,OAAOpN,OAEhB,kBAAC,KAAa2G,KAAd,CAAmBC,MAAM,QAAQpK,EAAM4Q,OAAOC,MAC9C,kBAAC,KAAa1G,KAAd,CAAmBC,MAAM,QAAQpK,EAAM4Q,OAAOE,OAC9C,kBAAC,KAAa3G,KAAd,CAAmBC,MAAM,eACtBpK,EAAM4Q,OAAOxC,aAEhB,kBAAC,KAAajE,KAAd,CAAmBC,MAAM,QACtBpK,EAAM4Q,OAAOpC,MACZxO,EAAM4Q,OAAOpC,KAAKnN,KAAI,SAAC+O,GACrB,OACE,uBAAGjL,KAAI,mBAAciL,IAClB,IACD,4BAAKA,GAAU,UAM3B,6BACA,6BACA,6BACA,yBAAKjN,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,IAAD,CAAQ8K,KAAK,QAAQ9H,MAAM,QAAQ/J,KAAK,SAASsL,QAjClC,WAEnBpK,EjBkDG,SAAmB4E,GACtB,IAAId,EAAO,CACP8M,UAAWhM,GAKf,MAAO,CACH9F,KChEmB,cDiEnBC,QALYC,IAAMC,KAAN,UE/DO,aF+DP,cAAuC6E,GAClD5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SiBvDtByR,CAAUjR,EAAM4Q,OAAO5O,MAChCsC,MAAM,uFA8BF,kB,kLCiBO4M,OAnDf,SAA2BlR,GACzB,IAAMgR,EAAYhR,EAAMmR,MAAMC,OAAOJ,UADL,EAEFlQ,mBAAS,IAFP,mBAEzBuQ,EAFyB,KAEhBC,EAFgB,KAI1BC,EAAiBC,KAAOC,IAAV,MAgBpB,OATAnR,qBAAU,WACRlB,IACGO,IADH,yCACyCqR,EADzC,iBAEG1R,MAAK,SAACC,GACL+R,EAAW/R,EAASC,KAAK,OAE1BsH,OAAM,SAACC,GAAD,OAASzC,MAAMyC,QACvB,CAACiK,IAGF,yBAAK7N,MAAO,CAAEC,MAAO,OAAQoD,QAAS,cACpC,yBAAKrD,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,WAC7C,4BAAKoL,EAAQzL,QAGf,6BAEA,kBAAC,KAAD,CAAK8L,OAAQ,CAAC,GAAI,KAChB,kBAAC,KAAD,CAAKC,GAAI,GAAIrJ,GAAI,IAEf,kBAACiJ,EAAD,KACA,kBAAC,KAAD,CAAOK,MAAQ,GAAK,GACpB,2BACEzO,MAAO,CAACiD,gBAAiB,SACzBhB,IAAG,UAAKiM,EAAQhM,UAChBwM,UAAQ,EACRC,aAAa,kBAKjB,kBAAC,KAAD,CAAKH,GAAI,GAAIrJ,GAAI,IAEf,kBAAC,GAAD,CAAasI,OAAQS,QCiMhBU,OA3Of,SAAqB/R,GAAQ,IAAD,EACMc,mBAAS,IADf,mBACnB4C,EADmB,KACTC,EADS,OAEF7C,mBAAS,GAFP,mBAEnB8C,EAFmB,KAEbC,EAFa,OAGA/C,mBAAS,GAHT,mBAGnBkR,EAHmB,aAIMlR,mBAAS,IAJf,mBAInBmR,EAJmB,KAITnO,EAJS,OAKIhD,mBAAS,CACrCyC,OAAQ,GACRC,MAAO,KAPiB,mBAKnBO,EALmB,KAKVmO,EALU,OASUpR,mBAAS,IATnB,mBASP+B,GATO,WAUpBsP,EAAMnS,EAAMmR,MAAMC,OAAOhB,IAG/B9P,qBAAU,WAMR0D,EALW,CACTC,KAAML,EACNwO,MAAOJ,MAIR,IAGH,IAAMhO,EAAc,SAACE,GACnB9E,IACGC,KADH,+CACgD8S,GAAOjO,GACpD5E,MAAK,SAACC,GACDA,EAASC,KAAK2E,SACZD,EAAKmO,SACP1O,EAAY,GAAD,mBAAKD,GAAL,YAAkBnE,EAASC,KAAK4E,eAE3CT,EAAYpE,EAASC,KAAK4E,aAE5BN,EAAYvE,EAASC,KAAK6E,WAE1BC,MAAM,uGAmBd,SAASC,EAAgBC,GACvBA,EAAEvB,cAAcwB,OAGlB,SAASC,EAAeF,GACtBA,EAAEvB,cAAc0B,QAChBH,EAAEvB,cAAc2B,YAAc,EAGhC,IAAMC,EAAcnB,EAASrC,KAAI,SAACyD,EAASvD,GAIzC,OACE,kBAAC,KAAD,CAAKoQ,GAAI,EAAGW,GAAI,GAAIlK,GAAI,IACtB,yBACEjF,MAAO,CACLoP,SAAU,SACVnM,gBAAiB,QACjBhD,MAAO,OACPC,OAAQ,MACRyC,WAAY,SACZ+F,SAAU,aAGZ,uBAAG1G,KAAI,mBAAcL,EAAQ9C,MAC3B,2BACEmB,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRwI,SAAU,WACV2G,IAAK,IACLC,KAAM,KAERrN,IAAG,UAAKN,EAAQO,UAChBC,YAAaf,EACbgB,WAAYb,EACZc,OAAK,MAOX,6BACA,kBAAC,IAAD,CACEC,OACE,uBAAGN,KAAI,kBAAaL,EAAQY,OAAO1D,MACjC,kBAAC,IAAD,CAAQoD,IAAKN,EAAQY,OAAOC,SAGhCC,MAAOd,EAAQc,QAEjB,uBAAGT,KAAI,kBAAaL,EAAQY,OAAO1D,MACjC,8BAAO8C,EAAQY,OAAOxD,OAExB,0BACEiB,MAAO,CACL6I,YAAa,OACb0G,WAAY,MACZC,MAAO,QACP3M,QAAS,eACTiI,UAAW,UANf,UAQKnJ,EAAQtB,MAAMqC,eAAe,SARlC,YASA,iCA6BA/D,EAAgB,SAACwE,EAASsM,GAC9B,IAAMC,EAAU,eAAQ9O,GAMxB,GAJA8O,EAAWD,GAAYtM,EAEvBU,QAAQC,IAAI,UAAWX,GAEN,UAAbsM,EAAsB,CACxB,IAAIE,EApBY,SAACxR,GACnB,IAAM9B,EAAOgE,EACTuP,EAAQ,GAEZ,IAAK,IAAI5R,KAAO3B,EACVA,EAAK2B,GAAKa,MAAQiN,SAAS3N,EAAO,MACpCyR,EAAQvT,EAAK2B,GAAK4R,OAGtB,OAAOA,EAWaC,CAAY1M,GAC9BuM,EAAWD,GAAYE,GAhCC,SAACxM,GAO3BtC,EANW,CACTC,KAAM,EACNmO,MAAOJ,EACP1L,QAASA,IAIXzC,EAAQ,GA0BRoP,CAAoBJ,GACpBX,EAAWW,IAoBb,OACE,yBAAK1P,MAAO,CAAEC,MAAO,MAAO+C,OAAQ,cAClC,yBAAKhD,MAAO,CAAE8K,UAAW,WACvB,4BACG,IADH,IAEIkE,EAFJ,UAEe,kBAAC,KAAD,CAAMjT,KAAK,SAAU,MAMtC,kBAAC,KAAD,CAAKwS,OAAQ,CAAC,GAAI,KAChB,kBAAC,KAAD,CAAKC,GAAI,GAAIvJ,GAAI,IAEf,kBAAC,EAAD,CACEhH,KAAMmC,EACNzB,cAAe,SAACwE,GAAD,OAAaxE,EAAcwE,EAAS,cAGvD,kBAAC,KAAD,CAAKqL,GAAI,GAAIvJ,GAAI,IAEf,kBAAC,EAAD,CACEhH,KAAMoC,EACN1B,cAAe,SAACwE,GAAD,OAAaxE,EAAcwE,EAAS,cAOzD,yBACEnD,MAAO,CACL6C,QAAS,OACTC,eAAgB,WAChBE,OAAQ,cAGV,kBAAC,EAAD,CAAejD,gBArDI,SAACmD,GACxB,IAAInC,EAAO,CACTD,KAAM,EACNmO,MAAOJ,EACP1L,QAASvC,EACTwC,WAAYF,GAGdxC,EAAQ,GAGRhB,EAAcwD,GAEdrC,EAAYE,OA6CV,kBAAC,KAAD,CAAKwN,OAAQ,CAAC,GAAI,KAAM7M,GAExB,6BAECoN,GAAYD,GACX,yBAAK7O,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,WAC7C,4BAAQuE,QA3LQ,WACtB,IAAIvG,EAAOL,EAAOoO,EAQlBhO,EAPW,CACTC,KAAMA,EACNmO,MAAOJ,EACPK,UAAU,EACV/L,QAASvC,IAIXF,EAAQI,KAiLF,yB,OCjLKiP,OA1Df,SAAuBlT,GAsCnB,OACI,6BACI,+BACI,+BACI,4BACI,6CACA,gDACA,6CACA,kDAIR,+BArCRA,EAAMmT,UAAYnT,EAAMmT,SAAS9R,KAAI,SAACyD,EAASvD,GAAV,OACjC,wBAAIJ,IAAKI,GACL,4BAGQ,yBAAK4B,MAAO,CAAEC,MAAO,QAAU8M,IAAI,UACnC9K,IAAKN,EAAQI,eAGrB,4BACKJ,EAAQsO,SADb,OAGA,iCACOtO,EAAQtB,OAEf,4BACI,4BAAQgH,QAAS,kBAAMxK,EAAMqT,WAAWvO,EAAQ9C,OAAhD,mB,oBCkGLsR,OA7Hf,SAAiBtT,GAAQ,IAAD,EACcc,mBAAS,IADvB,mBACfyS,EADe,KACHC,EADG,OAEY1S,mBAAS,IAFrB,mBAEf2S,EAFe,KAEJC,EAFI,OAGF5S,mBAAS,IAHP,mBAGf6S,EAHe,KAGXC,EAHW,OAIY9S,mBAAS,IAJrB,mBAIf+S,EAJe,KAIJC,EAJI,OAKMhT,mBAAS,GALf,mBAKfiT,EALe,KAKPC,EALO,OAMUlT,mBAAS,IANnB,mBAMfmT,EANe,KAMLC,EANK,OAOYpT,mBAAS,IAPrB,mBAOfqT,EAPe,KAOJC,EAPI,OAQctT,mBAAS,IARvB,mBAQfuT,EARe,KAQHC,EARG,OASIxT,oBAAS,GATb,mBASfyT,EATe,KASRC,EATQ,KAmFtB,SAASC,EAASC,GACZA,EAAIvQ,SACNG,MAAM,6BAENqQ,IAAOC,KAAK,CACVC,IAAK,yBACLC,OAAQ,OACRC,SAAU,OACVC,QAAS,CAAE,eAAgB,oBAC3BxV,KAAMyV,KAAKC,UAAU,CACnBC,QAAST,EAAIS,QACbC,aAAcV,EAAIU,eAGpBC,MAAO,SAAS7Q,GACdwC,QAAQC,IAAIzC,MAGf8Q,MAAK,SAAU9V,GAGd,OAAOA,EAAK+L,QACV,IAAK,cAEH,MACF,IAAK,WA/Bb,SAAoB/L,GAClB8E,MAAM,kEACNtE,EAAM8H,UAAUtI,GA+BRsI,CAAUtI,EAAK+V,cAMrBjR,MAAM,8BAAD,OAAWoQ,EAAIc,YAIxB,OA5GAlV,qBAAU,WACR,IAAa,IAAViU,EAAe,CAEhB,IAAIkB,EAAMC,OAAOD,IACjBA,EAAIE,KAAK,eAGT,IAAMC,EAAQ,CACZC,GAAIlC,EACJmC,WAAYjC,EACZuB,aAAc7B,EACdwC,OAAQhC,EACR7R,KAAMuR,EACNuC,WAAY7B,EACZ8B,UAAWhC,EACXiC,YAAa7B,EAGb8B,eAAgB,sDAIlBV,EAAIW,YAAYR,EAAOnB,GAEzBD,GAAS,KACR,CAACD,IAoFF,4BAAQ/J,QAnDV,SAAwBhG,GACtBA,EAAE2J,iBA/Bc,SAAC3O,GAEjB,IAAM6W,EAAa,CACjBR,GAAIrW,EAAKqW,GACTS,UAAW9W,EAAK8W,UAChBP,OAAQvW,EAAK6P,MACbkH,QAAS/W,EAAKyL,SAASjJ,IACvBwU,UAAWhX,EAAKyL,SAAS/I,KACzBuU,WAAYjX,EAAKyL,SAAS3D,OAG3BlI,IAAMC,KAAK,mBAAoBgX,GAC3B/W,MAAK,SAAAC,GACEA,EAASC,KAAK2E,SACdqP,EAAcjU,EAASC,KAAKkX,YAC5BhD,EAAanU,EAASC,KAAKmX,WAC3B/C,EAAMrU,EAASC,KAAKqW,IACpB/B,EAAavU,EAASC,KAAK8W,WAC3BtC,EAAUzU,EAASC,KAAKuW,QACxB7B,EAAY3U,EAASC,KAAKoX,UAC1BxC,EAAa7U,EAASC,KAAKgX,WAC3BlC,EAAc/U,EAASC,KAAKiX,YAC5BjC,GAAS,IAETlQ,MAAM,4GAUlBuS,CAAU7W,KA+CV,6BC0CW8W,OAhKf,SAAkB9W,GACd,IAAMI,EAAWC,cADI,EAGKS,mBAAS,GAHd,mBAGdiW,EAHc,KAGPC,EAHO,OAIalW,oBAAS,GAJtB,mBAIdmW,EAJc,KAIHC,EAJG,OAKiBpW,oBAAS,GAL1B,mBAKdqW,EALc,KAKDC,EALC,OAMDtW,mBAAS,gBANR,mBAMd6S,EANc,aAOa7S,mBAAS,SAPtB,mBAOd+S,EAPc,KAOHC,EAPG,KASrBxT,qBAAU,WAEN,IAAI+W,EAAY,GAEZrX,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAASG,MACvCpL,EAAMC,KAAKgL,SAASG,KAAKC,OAAS,IAClCrL,EAAMC,KAAKgL,SAASG,KAAKkM,SAAQ,SAAAnH,GAC7BkH,EAAU3W,KAAKyP,EAAKnL,OAExB5E,EtBiDT,SAAsBiX,EAAWE,GAiBpC,MAAO,CACHrY,KCvFsB,iBDwFtBC,QAjBYC,IAAMO,IAAN,yCAA4C0X,EAA5C,gBACX/X,MAAK,SAAAC,GAWF,OAPAgY,EAASD,SAAQ,SAAAE,GACbjY,EAASC,KAAK8X,SAAQ,SAACG,EAAelW,GAC9BiW,EAASxS,KAAOyS,EAAczV,MAC9BzC,EAASC,KAAK+B,GAAO6R,SAAWoE,EAASpE,gBAI9C7T,EAASC,SsB/DHkY,CAAaL,EAAWrX,EAAMC,KAAKgL,SAASG,OAChD9L,MAAK,SAAAC,GAAcoY,EAAepY,EAASJ,eAGzD,CAACa,EAAMC,KAAKgL,SAAU7K,IAGzB,IAAIuX,EAAiB,SAACC,GAClB,IAAIvI,EAAQ,EAEZuI,EAAWvW,KAAI,SAAA8O,GACXd,GAASJ,SAASkB,EAAK3M,MAAO,IAAM2M,EAAKiD,YAG7C4D,EAAS3H,GACT6H,GAAa,IAiCXW,EAAqB,SAACC,GACxBhE,EAAagE,EAAYtV,OAAOlB,QAIpC,OACI,yBAAK6B,MAAO,CAAEC,MAAO,MAAO+C,OAAQ,cAChC,uCAEA,6BACI,kBAAC,GAAD,CAAegN,SAAUnT,EAAMC,KAAK2X,WAAYvE,WAtCvC,SAACrC,GAElB5Q,EtBmDD,SAAwB4Q,GAgB3B,MAAO,CACH9R,KC7GwB,mBD8GxBC,QAhBYC,IAAMO,IAAN,uCAA0CqR,IACrD1R,MAAK,SAAAC,GAUF,OARAA,EAASC,KAAK4L,KAAKkM,SAAQ,SAAAnH,GACvB5Q,EAASC,KAAK4E,YAAYkT,SAAQ,SAACxS,EAASvD,GACpC4O,EAAKnL,KAAOF,EAAQ9C,MACpBzC,EAASC,KAAK4E,YAAY7C,GAAO6R,SAAWjD,EAAKiD,gBAKtD7T,EAASC,SsBhEXuY,CAAe/G,IACnB1R,MAAK,SAAAC,GAEEA,EAASJ,QAAQiF,YAAYiH,QAAU,GACvC6L,GAAa,UAmCpBD,EACG,yBAAK9T,MAAO,CAAE4I,UAAW,SACrB,8CAAoBgL,IAEtBI,EAEE,kBAAC,KAAD,CACI5L,OAAO,UACP3F,MAAM,iCAGV,oCACI,6BACA,kBAAC,KAAD,CAAOwI,aAAa,KAO/B6I,GACG,6BACI,8BACI,yBAAKlS,UAAU,cACX,+BACA,2BACI7F,KAAK,QACLgD,KAAK,aACLZ,MAAM,OACNW,QAAuB,SAAd4R,EACTpS,SAAUoW,EACV9S,UAAU,qBAPd,8BAaJ,yBAAKA,UAAU,cACX,+BACA,2BACI7F,KAAK,QACLgD,KAAK,aACLZ,MAAM,QACNW,QAAuB,UAAd4R,EACTpS,SAAUoW,EACV9S,UAAU,qBAPd,gDAaJ,yBAAKA,UAAU,cACX,+BACA,2BACI7F,KAAK,QACLgD,KAAK,aACLZ,MAAM,QACNW,QAAuB,UAAd4R,EACTpS,SAAUoW,EACV9S,UAAU,qBAPd,oCAaJ,yBAAKA,UAAU,cACX,kBAAC,GAAD,CACI8Q,GAAIlC,EACJ2C,UAAWzC,EACXxE,MAAO0H,EACP9L,SAAUjL,EAAMC,KAAKgL,SACrBnD,UAnGD,SAACtI,GAExBY,EtB8DD,SAAsBZ,GAKzB,MAAO,CACHN,KCzHsB,iBD0HtBC,QALYC,IAAMC,KAAN,wBAAoCG,GAC/CF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SsBjElBwY,CAAa,CAClBC,YAAazY,EACboY,WAAY5X,EAAMC,KAAK2X,cAEtBtY,MAAK,SAAAC,GACEA,EAASJ,QAAQgF,UACjB+S,GAAa,GACbE,GAAe,e,8BCvCpBc,GAvBa,WAUxB,OARAC,IAAE,gBAAgBC,MACd,SAAS7W,GACFmU,OAAO2C,SAASlT,OAASmT,KAAKnT,MAC7BgT,IAAEG,MAAMC,SAAS,cAMzB,yBAAKC,MAAM,YAAYrV,MAAO,CAACC,MAAO,MAClC,4BACI,wBAAIoV,MAAM,UAAUrX,IAAI,KAAI,uBAAGgE,KAAK,KAAR,qBAAe,8BAAM,yBAAKC,IAAKqT,KAAMtV,MAAO,CAACC,MAAM,aAC/E,wBAAIoV,MAAM,UAAUrX,IAAI,KAAI,uBAAGgE,KAAK,YAAR,4BAAwB,8BAAM,yBAAKC,IAAKqT,KAAMtV,MAAO,CAACC,MAAM,aACxF,wBAAIoV,MAAM,UAAUrX,IAAI,KAAI,uBAAGgE,KAAK,KAAR,4BAAiB,8BAAM,yBAAKC,IAAKqT,KAAMtV,MAAO,CAACC,MAAM,aACjF,wBAAIoV,MAAM,OAAOrX,IAAI,KAAI,uBAAGgE,KAAK,KAAR,4BAAiB,8BAAM,yBAAKC,IAAKqT,KAAMtV,MAAO,CAACC,MAAM,aAC9E,wBAAIoV,MAAM,SAASrX,IAAI,KAAI,uBAAGgE,KAAK,UAAR,sBAAqB,8BAAM,yBAAKC,IAAKqT,KAAMtV,MAAO,CAACC,MAAM,gBCuCrFsV,OAzDf,SAAqB1Y,GAejB,OACI,yBAAKmD,MAAO,CAAEC,MAAO,MAAO+C,OAAQ,cAChC,kBAAC,GAAD,MACA,yBAAKhD,MAAO,CAAE8K,UAAW,WACrB,wCAEJ,6BAEA,+BACI,+BACI,4BACI,oCACA,0CACA,qCACA,wCACA,gDACA,0CAIR,+BAGKjO,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAASxK,SACxCT,EAAMC,KAAKgL,SAASxK,QAAQY,KAAI,SAAC8O,EAAM5O,GAAP,OAC5B,wBAAIJ,IAAKI,GACL,4BAAK4O,EAAKjO,MACV,4BAAKiO,EAAKwI,aACV,4BAAKxI,EAAK3M,OACV,4BAAK2M,EAAKiD,UACV,4BAAKjD,EAAKyI,gBACV,4BAAI,4BAAQpO,QAAS,SAAAhG,GAAOA,EAAE2J,iBA7CtC,SAACgC,GACjB,IAAM3Q,EAAO,CAACqZ,WAAY1I,GAE1B/Q,IAAMC,KAAK,wBAAyBG,GACnCF,MAAK,SAAAC,GACEA,EAASC,KAAK2E,SACduR,OAAO2C,SAASlT,KAAO5F,EAASC,KAAKqV,IACrCvQ,MAAM,+EAENA,MAAM,iFAoC0DwU,CAAY3I,EAAKnL,MAA7D,0B,oCC5BrB+T,G,uLAfP,SAAUC,EAAGC,GACT,IACIC,EAAIC,SAASC,cAAc,UAAWF,EAAEha,KAAO,kBAAmBga,EAAEG,OAAQ,EAChFH,EAAE9T,IAAM,mDACA+T,SAASG,qBAAqB,QAAQ,GAAMC,YAAYL,GAChExD,OAAO8D,YAAcP,EAAGA,EAAEQ,SAJA,CAAC,MAAQ,mCAAmC,aAAc,EAAK,+BAAgC,GAD7H,CAMKN,SAAUzD,OAAO8D,aAAe,M,+BAGrC,OACI,kC,GAfoBE,a,mBCI1BC,I,kLAEF,OACE,4BACE,4BACKrB,KAAKtY,MAAM4Z,UAAUC,UAAU,EAAG,KAEvC,4BACE,kBAAC,KAAD,CACEC,GAAI,CAAEC,SAAU,gBAAiBC,MAAO,CAAEhY,IAAKsW,KAAKtY,MAAMgC,OAEzDsW,KAAKtY,MAAM4F,QAGhB,4BACG0S,KAAKtY,MAAMkC,W,GAfCwX,cAiGRO,G,oDA1Eb,WAAYja,GAAQ,IAAD,+BACjB,cAAMA,IAQRka,aAAe,WAMb9a,IACGC,KAAK,0BANW,IAOhBC,MAAK,SAAC6a,GACL,IAAIC,EACAD,EAAW3a,KAAK4B,KAAKiK,OAAS,GAEhC+O,EADeD,EAAW3a,KAAK4B,KACZC,KAAI,SAAC8O,GAAD,OACrB,kBAAC,GAAD,CACEhP,IAAKkZ,KAAKC,MAAwB,IAAhBpL,KAAKqL,SACvBvY,IAAKmO,EAAKnO,IACVE,KAAMiO,EAAKjO,KACX0X,UAAWzJ,EAAKyJ,UAChBhU,MAAOuK,EAAKvK,WAGhB,EAAK4U,SAAS,CACZC,WAAYL,MAGdA,EACE,4BACE,wBAAIM,QAAQ,KAAZ,mGAGJ,EAAKF,SAAS,CACZC,WAAYL,QAIjBtT,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA3ChB,EAAK5G,MAAQ,CAACsa,WAAY,IAFT,E,iEAMjBnC,KAAK4B,iB,+BAiDL,OACE,yBAAK/W,MAAO,CAACC,MAAM,MAAO+C,OAAO,SAC/B,yBAAKhD,MAPQ,CACfgD,OAAQ,KAOJ,kBAACwU,GAAA,EAAD,KACE,+BACE,4BACE,4CACA,mDACA,oDAGJ,+BAAQrC,KAAKnY,MAAMsa,mB,GAnEPG,IAAMlB,WCZfmB,G,2KATP,OACI,6BACI,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GALOnB,a,+CC0GRoB,OAxGf,SAAwB9a,GACtB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QADb,EAEHa,mBAAS,IAFN,mBAEtB4L,EAFsB,KAEfC,EAFe,OAGC7L,mBAAS,IAHV,mBAGtBia,EAHsB,KAGbC,EAHa,KAe3B1a,qBAAU,gBACoB2a,IAAzBjb,EAAMqY,SAAS2B,QAChBrN,EAAS3M,EAAMqY,SAAS2B,MAAMpU,OAC9BoV,EAAWhb,EAAMqY,SAAS2B,MAAMkB,UAElClU,QAAQC,IAAIjH,EAAMqY,SAAS8C,eAAe,UAC1CnU,QAAQC,IAAIjH,EAAMqY,SAAS2B,SAC1B,IAEL,IA+CMoB,EAAQ,cACZjV,OAAQ,GACR/C,MAAO,OAFK,SAGJ,QAUV,OACE,yBAAKD,MAAOiY,EAAUrW,UAAU,OAC9B,mDACA,kBAACsW,GAAA,EAAD,CAAMhS,SA/DgB,SAAC9G,GAGzB,GAFAA,EAAM4L,kBAEDzB,GAA0B,IAAjBA,EAAMrB,OAClB,OAAO/G,MAAM,2DACR,IAAKyW,GAA8B,IAAnBA,EAAQ1P,OAC7B,OAAO/G,MAAM,2DAIf,GAAGtE,EAAMqY,SAAS8C,eAAe,SAAS,CACxC,IAAMjX,EAAO,CACXlC,IAAKhC,EAAMqY,SAAS2B,MAAMhY,IAC1B4D,MAAO8G,EACPwO,QAASH,GAGX3b,IAAMC,KAAK,oBAAqB6E,GAAM5E,MAAK,SAACC,GACtCA,EAASC,KAAK2E,SAChB6C,QAAQC,IAAI1H,EAASC,MACrB8E,MAAM,+EACNtE,EAAMS,QAAQC,KAAK,WAEnB4D,MAAM,sFAIL,CACL,IAAMJ,EAAO,CACXwB,OAAQzF,EAAKgL,SAASjJ,IACtBE,KAAMjC,EAAKgL,SAAS/I,KACpB0D,MAAO8G,EACPwO,QAASH,GAGX3b,IAAMC,KAAK,oBAAqB6E,GAAM5E,MAAK,SAACC,GACtCA,EAASC,KAAK2E,SAChB6C,QAAQC,IAAI1H,EAASC,MACrB8E,MAAM,qFACNtE,EAAMS,QAAQC,KAAK,WAEnB4D,MAAM,wEAuBR,kBAAC+W,GAAA,EAAKC,QAAN,CACEpc,KAAK,OACLiE,MAdW,CACjB+K,aAAc,EACd9K,MAAO,OAaDN,YAAY,sBACZrB,SAvFmB,SAACc,GAC1BoK,EAASpK,EAAMU,cAAc3B,QAuFvBA,MAAOoL,IAET,kBAAC,KAAD,CAAU6O,SAAUvb,EAAMqY,SAAS8C,eAAe,UAAYnb,EAAMqY,SAAS2B,MAAMkB,QAAS1b,KAAMub,EAAStZ,SAtFpF,SAACc,GAC5B,IAAM/C,EAAO+C,EAAMiZ,OAAOC,UAC1BT,EAAWxb,MAqFP,kBAACkc,GAAA,EAAD,CAAQvY,MAhBM,CAClB4I,UAAW,GAeqB7M,KAAK,SAASyc,OAAK,GAA/C,+BChGFC,I,2DACF,WAAY5b,GAAQ,IAAD,+BACf,cAAMA,IAcV6b,YAAc,SAAA7Z,GACV,IAAM8Z,EAAa,CACf9Z,OAGA0T,OAAOqG,QAAQ,mEACf3c,IACKC,KAAK,oBAAqByc,GAE1Bxc,MAAK,SAAA6a,GACCA,EAAW3a,KAAK2E,SACfG,MAAM,+CACNoR,OAAO2C,SAASlT,KAAK,KAErBb,MAAM,+DAIbwC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAlCT,EAuCnBiV,UAAY,WACR,IAAMF,EAAa,CACf9Z,IAAK,EAAKhC,MAAMqY,SAAS2B,MAAMhY,KAKnC5C,IACKC,KAAK,oBAAqByc,GAE1Bxc,MAAK,SAAA6a,GACF,GAAIA,EAAW3a,KAAKyc,MAAM,GAAI,KAGnBC,EAAa,EAAKlc,MAAlBkc,UACP,EAAK1B,SAAS,CAAC9U,OAAQyU,EAAW3a,KAAKyc,MAAM,GAAGvW,SAG7CwW,EAAUf,eAAe,QAAUe,EAAUla,MAAQ,EAAK7B,MAAMuF,OAC/D,EAAK8U,SAAS,CAAC2B,QAAQ,IAEvB,EAAK3B,SAAS,CAAC2B,QAAQ,IAG3B,IAAMF,EACF,yBAAK9Y,MAAO,CAACC,MAAM,MAAO+C,OAAO,SAC7B,kBAACwU,GAAA,EAAD,CAAOyB,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,wBAAItX,GAAG,QAAQD,UAAU,WAAWoV,EAAW3a,KAAKyc,MAAM,GAAGrW,QAEjE,4BACI,wBAAIZ,GAAG,SAASD,UAAU,WACtB,0CACCoV,EAAW3a,KAAKyc,MAAM,GAAG/Z,OAGlC,4BACI,wBAAI8C,GAAG,OAAOD,UAAU,WACpB,wCACCoV,EAAW3a,KAAKyc,MAAM,GAAGrC,UAAUC,UAAU,EAAG,OAI7D,+BACI,4BACI,wBAAI9U,UAAU,UAAU2V,QAAQ,IAAI6B,wBAAyB,CACzDC,OAAQrC,EAAW3a,KAAKyc,MAAM,GAAGf,cAKjD,6BACA,6BACJ,kBAAC,KAAD,CACQpB,GAAI,CACAC,SAAU,eACVC,MAAO,CACHpU,MAAOuU,EAAW3a,KAAKyc,MAAM,GAAGrW,MAChCsV,QAASf,EAAW3a,KAAKyc,MAAM,GAAGf,QAClClZ,IAAK,EAAKhC,MAAMqY,SAAS2B,MAAMhY,OAI3C,kBAAC0Z,GAAA,EAAD,CAAQC,OAAK,EAACxY,MAAqB,CAAE6C,QAAO,UAAM,EAAK7F,MAAMgc,OAAS,eAAiB,UAAvF,wBAIJ,kBAACT,GAAA,EAAD,CACIvY,MAAO,CAAE6C,QAAO,UAAM,EAAK7F,MAAMgc,OAAS,eAAiB,SAC3DR,OAAK,EACLnR,QAAS,EAAKqR,YAAYY,KACtB,KAAM,EAAKzc,MAAMqY,SAAS2B,MAAMhY,MAJxC,yBAWJ,EAAKwY,SAAS,CAACyB,MAAOA,QAI7BnV,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAzHpB,EAAK5G,MAAQ,CAAC8b,MAAO,IACrB,EAAK9b,MAAQ,CAACuF,OAAQ,IACtB,EAAKvF,MAAQ,CAACgc,QAAQ,GAJP,E,sEAQmBlB,IAA9B3C,KAAKtY,MAAMqY,SAAS2B,MACpB1B,KAAK0D,YAELtG,OAAO2C,SAASlT,KAAK,W,+BAyHzB,OAAO,yBAAKhC,MAJK,CACbgD,OAAQ,KAGkBmS,KAAKnY,MAAM8b,W,GArIvBvC,cA6IXgD,gBAJS,SAACvc,GAAD,MAAY,CAChC+b,UAAW/b,EAAMF,KAAKgL,YAGXyR,CAAyBd,IC9IlCe,IAFeja,IAAb6J,SAEM,CACZ,CAAEpL,IAAK,EAAGG,MAAO,kBACjB,CAAEH,IAAK,EAAGG,MAAO,kBACjB,CAAEH,IAAK,EAAGG,MAAO,gBACjB,CAAEH,IAAK,EAAGG,MAAO,gBACjB,CAAEH,IAAK,EAAGG,MAAO,gBACjB,CAAEH,IAAK,EAAGG,MAAO,mBACjB,CAAEH,IAAK,EAAGG,MAAO,kBACjB,CAAEH,IAAK,EAAGG,MAAO,gBACjB,CAAEH,IAAK,EAAGG,MAAO,mBACjB,CAAEH,IAAK,GAAIG,MAAO,+BAClB,CAAEH,IAAK,GAAIG,MAAO,sBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,sBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,gBAClB,CAAEH,IAAK,GAAIG,MAAO,4BAClB,CAAEH,IAAK,GAAIG,MAAO,4BAClB,CAAEH,IAAK,GAAIG,MAAO,4BAClB,CAAEH,IAAK,GAAIG,MAAO,4BAClB,CAAEH,IAAK,GAAIG,MAAO,kCAClB,CAAEH,IAAK,GAAIG,MAAO,QAClB,CAAEH,IAAK,GAAIG,MAAO,4BAClB,CAAEH,IAAK,GAAIG,MAAO,kBAClB,CAAEH,IAAK,GAAIG,MAAO,sBAClB,CAAEH,IAAK,GAAIG,MAAO,yBAClB,CAAEH,IAAK,GAAIG,MAAO,OAClB,CAAEH,IAAK,GAAIG,MAAO,8BAyFLsb,OAtFf,SAAoB5c,GAClB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QADjB,EAEDa,mBAAS,GAFR,mBAElB+b,EAFkB,KAEZC,EAFY,OAGGhc,qBAHH,mBAGlBic,EAHkB,KAGVC,EAHU,OAIGlc,mBAAS,IAJZ,mBAIlBmc,EAJkB,KAIVC,EAJU,KA4CzB,OACE,yBAAK/Z,MAAO,CAAE6K,SAAU,SAAU7H,OAAQ,cACxC,yBAAKhD,MAAO,CAAE8K,UAAW,SAAUC,aAAc,SAC/C,+EAGF,kBAAC,IAAD,CAAM7E,SAhCY,SAAC9G,GAErB,GADAA,EAAM4L,kBACD0O,IAASI,GAAsB,KAAXF,EACvB,OAAOzY,MAAM,iFAKf,IAAMJ,EAAO,CAEXlC,IAAK/B,EAAKgL,SAASjJ,IACnBmb,cAAeF,EACfG,cAAeL,EACfF,KAAMF,GAAME,GAAMvb,OAGpBmN,IAAMpP,KAAK,qBAAsB6E,GAAM5E,MAAK,SAACC,GACvCA,EAASC,KAAK2E,SAChBG,MAAM,gFACNtE,EAAMS,QAAQC,KAAK,MAEnB4D,MAAM,qFAYN,yBAAKnB,MAAO,CAAE8C,eAAgB,kBAC5B,qDACA,kBAAC,IAAD,CAAOxE,SAvCa,SAACc,GAC3B2a,EAAU3a,EAAMU,cAAc3B,QAsCcA,MAAO2b,IAC7C,6BACA,6BACA,2DACA,kBAAC,IAAD,CAAO/d,KAAK,SAASuC,SA/CD,SAACc,GAC3Bya,EAAUza,EAAMU,cAAc3B,QA8C4BA,MAAOyb,IAC3D,6BACA,6BACA,kDACA,4BAAQtb,SAvDU,SAACc,GACzBua,EAAQva,EAAMU,cAAc3B,QAsDeA,MAAOub,GACzCF,GAAMtb,KAAI,SAAC8O,GAAD,OACT,4BAAQhP,IAAKgP,EAAKhP,IAAKG,MAAO6O,EAAKhP,KAChC,IACAgP,EAAK7O,WAIZ,6BACA,8BAEF,4BAAQpC,KAAK,UAAb,gBAEA,6BACA,+mBChHawD,IAAb6J,SA4BO8Q,OA1Bf,SAAgBrd,GACd,OACE,6BACE,wCACA,qEACA,yBAAKoF,IAAKpF,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAAStF,QACrD,sCAAY3F,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAAS/I,MACvD,uBAAGiD,KAAK,iBACN,6CAEF,uBAAGA,KAAK,cACN,0CAEF,uBAAGA,KAAK,IACN,+CAEF,0DACUnF,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAASmS,eAErD,mDACQpd,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAASkS,iB,OCqO1CG,OAtPf,SAAoBtd,GAClB,IAAMud,EAASvd,EAAMmR,MAAMC,OAAOmM,OADT,EAGOzc,mBAAS,IAHhB,mBAGlB4C,EAHkB,KAGRC,EAHQ,OAID7C,mBAAS,GAJR,mBAIlB8C,EAJkB,KAIZC,EAJY,OAKC/C,mBAAS,GALV,mBAKlBkR,EALkB,aAMOlR,mBAAS,IANhB,mBAMlBmR,EANkB,KAMRnO,EANQ,OAOKhD,mBAAS,CACrCyC,OAAQ,GACRC,MAAO,KATgB,mBAOlBO,EAPkB,KAOTmO,EAPS,OAWWpR,mBAAS,IAXpB,mBAWN+B,GAXM,WAazBvC,qBAAU,WAMR0D,EALW,CACTC,KAAML,EACNwO,MAAOJ,MAIR,IAGH,IAAMhO,EAAc,SAACE,GACnB9E,IACGC,KADH,iDACkDke,GAAUrZ,GACzD5E,MAAK,SAACC,GACDA,EAASC,KAAK2E,SACZD,EAAKmO,SACP1O,EAAY,GAAD,mBAAKD,GAAL,YAAkBnE,EAASC,KAAK4E,eAE3CT,EAAYpE,EAASC,KAAK4E,aAE5BN,EAAYvE,EAASC,KAAK6E,WAE1BC,MAAM,uGAmBd,SAASC,EAAgBC,GACvBA,EAAEvB,cAAcwB,OAGlB,SAASC,EAAeF,GACtBA,EAAEvB,cAAc0B,QAChBH,EAAEvB,cAAc2B,YAAc,EAIhCtE,qBAAU,WAMR0D,EALW,CACTC,KAAML,EACNwO,MAAOJ,MAIR,IAGH,IAuBMlQ,EAAgB,SAACwE,EAASsM,GAC9B,IAAMC,EAAU,eAAQ9O,GAMxB,GAJA8O,EAAWD,GAAYtM,EAEvBU,QAAQC,IAAI,UAAWX,GAEN,UAAbsM,EAAsB,CACxB,IAAIE,EApBY,SAACxR,GACnB,IAAM9B,EAAOgE,EACTuP,EAAQ,GAEZ,IAAK,IAAI5R,KAAO3B,EACVA,EAAK2B,GAAKa,MAAQiN,SAAS3N,EAAO,MACpCyR,EAAQvT,EAAK2B,GAAK4R,OAGtB,OAAOA,EAWaC,CAAY1M,GAC9BuM,EAAWD,GAAYE,GAhCC,SAACxM,GAO3BtC,EANW,CACTC,KAAM,EACNmO,MAAOJ,EACP1L,QAASA,IAIXzC,EAAQ,GA0BRoP,CAAoBJ,GACpBX,EAAWW,IAoBPhO,EAAcnB,EAASrC,KAAI,SAACyD,EAASvD,GAIzC,OACE,kBAAC,KAAD,CAAKoQ,GAAI,EAAGW,GAAI,GAAIlK,GAAI,GAAIjH,IAAKI,GAC/B,yBACE4B,MAAO,CACLoP,SAAU,SACVnM,gBAAiB,QACjBhD,MAAO,OACPC,OAAQ,MACRyC,WAAY,SACZ+F,SAAU,aAGZ,uBAAG1G,KAAI,mBAAcL,EAAQ9C,MAC3B,2BACEmB,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRwI,SAAU,WACV2G,IAAK,IACLC,KAAM,KAERrN,IAAG,UAAKN,EAAQO,UAChBC,YAAaf,EACbgB,WAAYb,EACZc,OAAK,MAOX,6BACA,kBAAC,IAAD,CACEC,OACE,uBAAGN,KAAI,kBAAaL,EAAQY,OAAO1D,MACjC,kBAAC,IAAD,CAAQoD,IAAKN,EAAQY,OAAOC,SAGhCC,MAAOd,EAAQc,QAEjB,uBAAGT,KAAI,kBAAaL,EAAQY,OAAO1D,MACjC,8BAAO8C,EAAQY,OAAOxD,OAExB,0BACEiB,MAAO,CACL6I,YAAa,OACb0G,WAAY,MACZC,MAAO,QACP3M,QAAS,eACTiI,UAAW,UANf,UAQKnJ,EAAQtB,MAAMqC,eAAe,SARlC,YASA,iCAKN,OACE,6BACE,6BACE,gEACA,2CAAiB7F,EAAMC,KAAKgL,UAAYjL,EAAMC,KAAKgL,SAASjJ,KAC5D,2CAAiBub,EAAjB,MAGF,yBAAKpa,MAAO,CAAEC,MAAO,MAAO+C,OAAQ,cAGlC,kBAAC,KAAD,CAAKuL,OAAQ,CAAC,GAAI,KAChB,kBAAC,KAAD,CAAKC,GAAI,GAAIvJ,GAAI,IAEf,kBAAC,EAAD,CACEhH,KAAMmC,EACNzB,cAAe,SAACwE,GAAD,OAAaxE,EAAcwE,EAAS,cAGvD,kBAAC,KAAD,CAAKqL,GAAI,GAAIvJ,GAAI,IAEf,kBAAC,EAAD,CACEhH,KAAMoC,EACN1B,cAAe,SAACwE,GAAD,OAAaxE,EAAcwE,EAAS,cAOzD,yBACEnD,MAAO,CACL6C,QAAS,OACTC,eAAgB,WAChBE,OAAQ,cAGV,kBAAC,EAAD,CAAejD,gBAlHE,SAACmD,GACxB,IAAInC,EAAO,CACTD,KAAM,EACNmO,MAAOJ,EACP1L,QAASvC,EACTwC,WAAYF,GAGdxC,EAAQ,GAGRhB,EAAcwD,GAEdrC,EAAYE,OA0GR,kBAAC,KAAD,CAAKwN,OAAQ,CAAC,GAAI,KAAM7M,GAExB,6BAECoN,GAAYD,GACX,yBAAK7O,MAAO,CAAE6C,QAAS,OAAQC,eAAgB,WAC7C,4BAAQuE,QArMM,WACtB,IAAIvG,EAAOL,EAAOoO,EAQlBhO,EAPW,CACTC,KAAMA,EACNmO,MAAOJ,EACPK,UAAU,EACV/L,QAASvC,IAIXF,EAAQI,KA2LA,0BCtKGuZ,OAxDf,WACE,OACE,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAAC,GAAD,MACA,yBAAKta,MAAO,CAAE2C,WAAY,OAAQ4X,UAAW,uBAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAKra,EAAa,QACnD,kBAAC,IAAD,CAAOka,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKC,GAAW,KACtD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKpV,GAAc,KAC5D,kBAAC,IAAD,CACEiV,OAAK,EACLC,KAAK,kBACLC,UAAWC,EAAKrR,IAAmB,KAErC,kBAAC,IAAD,CACEkR,OAAK,EACLC,KAAK,sBACLC,UAAWC,EAAK5M,GAAmB,QAErC,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,gBACLC,UAAWC,EAAK/L,GAAa,QAE/B,kBAAC,IAAD,CACE4L,OAAK,EACLC,KAAK,kBACLC,UAAWC,EAAKR,GAAY,QAG9B,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,aAAaC,UAAWC,EAAKhH,IAAU,KACzD,kBAAC,IAAD,CACE6G,OAAK,EACLC,KAAK,gBACLC,UAAWC,EAAKpF,IAAa,KAE/B,kBAAC,IAAD,CACEiF,OAAK,EACLC,KAAK,gBACLC,UAAWC,EAAKlB,IAAY,KAE9B,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,eAAeC,UAAWC,EAAKT,IAAQ,KACzD,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKjD,GAAU,QACrD,kBAAC,IAAD,CACE8C,OAAK,EACLC,KAAK,eACLC,UAAWC,EAAKhD,IAAgB,KAElC,kBAAC,IAAD,CAAO8C,KAAK,gBAAgBC,UAAWjC,MAEzC,kBAAC,GAAD,SC/DYoC,QACW,cAA7BtI,OAAO2C,SAAS4F,UAEe,UAA7BvI,OAAO2C,SAAS4F,UAEhBvI,OAAO2C,SAAS4F,SAAS9M,MACvB,2D,cCNS+M,GAJKC,aAAgB,CAChCle,KCKW,WAA+B,IAArBE,EAAoB,uDAAZ,GAAIie,EAAQ,uCACzC,OAAQA,EAAOlf,MACX,InCfqB,gBmCgBjB,OAAO,eAAKiB,EAAZ,CAAmBke,SAAUD,EAAOjf,UACxC,InClBkB,amCmBd,OAAO,eAAKgB,EAAZ,CAAmBme,YAAaF,EAAOjf,UAC3C,InClBiB,YmCmBb,OAAO,eAAKgB,EAAZ,CAAmB8K,SAAUmT,EAAOjf,UACxC,InCnBmB,cmCoBf,OAAO,eAAKgB,GAChB,InCpBmB,cmCqBf,OAAO,eACAA,EADP,CAEI8K,SAAS,eACF9K,EAAM8K,SADL,CAEJG,KAAMgT,EAAOjf,YAGzB,InC3BsB,iBmC4BlB,OAAO,eAAKgB,EAAZ,CAAmByX,WAAYwG,EAAOjf,UAC1C,InC5BwB,mBmC6BpB,OAAO,eACAgB,EADP,CACcyX,WAAYwG,EAAOjf,QAAQiF,YACrC6G,SAAS,eACF9K,EAAM8K,SADL,CAEJG,KAAMgT,EAAOjf,QAAQiM,SAGjC,InCnCsB,iBmCoClB,OAAO,eACAjL,EADP,CACcyX,WAAYwG,EAAOjf,QAAQyY,WACrC3M,SAAS,eACF9K,EAAM8K,SADL,CACeG,KAAMgT,EAAOjf,QAAQiM,SAKpD,QACI,OAAOjL,M,+BCnCboe,GAA4BC,aAAgBC,KAAmBC,KAAnCF,CAA+CG,MAEjFC,IAASC,OACL,kBAAC,IAAD,CACIC,MAAOP,GACHQ,GAIArJ,OAAOsJ,8BACPtJ,OAAOsJ,iCAGX,kBAAC,KAAD,KACI,kBAAC,GAAD,QAGN7F,SAAS8F,eAAe,SH+FxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9f,MAAK,SAAA+f,GACjCA,EAAaC,kB","file":"static/js/main.5b63ee90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flag.0575f921.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.f4e7346d.svg\";","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    GET_CART_ITEMS,\r\n    REMOVE_CART_ITEM,\r\n    ON_SUCCESS_BUY\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n     // == '/api/users'\r\n\r\n// 각각의 함수는 action 객체를 생성하여 return함\r\nexport function registerUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: REGISTER_USER, //state를 어떻게 변화시킬지를 정의\r\n        payload: request //action의 type에 따라 필요한 state값을 담고 있음\r\n        \r\n        // 즉, payload에 담긴 request 변수를 이용해서\r\n        // '/api/users/register'로 데이터들을 보내고 response.data를 받아와라!\r\n\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function addToCart(id) {\r\n    let body = {\r\n        productId: id\r\n    }\r\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function getCartItems(cartItems, userCart) {\r\n\r\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\r\n        .then(response => {\r\n            // CartItem들에 해당하는 정보들을  \r\n            // Product Collection에서 가져온후에 \r\n            // Quantity 정보를 넣어 준다.\r\n            userCart.forEach(cartItem => {\r\n                response.data.forEach((productDetail, index) => {\r\n                    if (cartItem.id === productDetail._id) {\r\n                        response.data[index].quantity = cartItem.quantity\r\n                    }\r\n                })\r\n            })\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: GET_CART_ITEMS,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function removeCartItem(productId) {\r\n\r\n    const request = axios.get(`/api/users/removeFromCart?id=${productId}`)\r\n        .then(response => {\r\n            //productInfo ,  cart 정보를 조합해서   CartDetail을 만든다. \r\n            response.data.cart.forEach(item => {\r\n                response.data.productInfo.forEach((product, index) => {\r\n                    if (item.id === product._id) {\r\n                        response.data.productInfo[index].quantity = item.quantity\r\n                    }\r\n\r\n                })\r\n            })\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: REMOVE_CART_ITEM,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function onSuccessBuy(data) {\r\n\r\n    const request = axios.post(`/api/users/successBuy`, data)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ON_SUCCESS_BUY,\r\n        payload: request\r\n    }\r\n}","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\nexport const ADD_TO_CART = 'add_to_cart';\r\nexport const GET_CART_ITEMS = 'get_cart_items';\r\nexport const REMOVE_CART_ITEM = 'remove_cart_item';\r\nexport const ON_SUCCESS_BUY = 'on_success_buy';\r\n\r\n\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//useSelector : Redux의 상태값을 조회\r\n\r\n//option 종류\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Checkbox } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n\r\n    const [Checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (value) => {\r\n        //누른 것의 Index를 구하고 \r\n        const currentIndex = Checked.indexOf(value)\r\n        //전체 Checked된 State에서  현재 누른 Checkbox가 이미 있다면 \r\n        const newChecked = [...Checked]\r\n\r\n        // State 넣어준다. \r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n            // 빼주고 \r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked)\r\n    }\r\n\r\n\r\n\r\n    const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\r\n        <React.Fragment key={index} >\r\n            <Checkbox onChange={() => handleToggle(value._id)}\r\n                checked={Checked.indexOf(value._id) === -1 ? false : true} />\r\n            <span>{value.name}</span>\r\n        </React.Fragment>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']} >\r\n                <Panel header=\"Genres\" key=\"1\">\r\n\r\n                    {renderCheckboxLists()}\r\n\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Radio } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nfunction RadioBox(props) {\r\n\r\n    const [Value, setValue] = useState(0)\r\n\r\n\r\n    const renderRadioBox = () => (\r\n        props.list && props.list.map(value => (\r\n            <Radio key={value._id} value={value._id}> {value.name} </Radio>\r\n        ))\r\n    )\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        props.handleFilters(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']} >\r\n                <Panel header=\"Price\" key=\"1\">\r\n\r\n                    <Radio.Group onChange={handleChange} value={Value}>\r\n                        {renderRadioBox()}\r\n                    </Radio.Group>\r\n\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBox\r\n","import React, { useState } from 'react'\r\nimport { Input } from 'antd';\r\nimport '../css/SearchBar.css';\r\nimport CheckBox from './CheckBox';\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n\r\n    const [SearchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const searchHandler = (event) => {\r\n        setSearchTerm(event.currentTarget.value)\r\n        props.refreshFunction(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder=\"브링콘과 함께 콘텐츠 여행을 떠나보세요!\"\r\n                onfocus=\"this.placeholder = ''\"\r\n                onblur=\"this.placeholder = 'enter your text'\"\r\n                onChange={searchHandler}\r\n                style={{ width: 720, height: '40px', borderRadius: '200px'}}\r\n                value={SearchTerm}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFeature\r\n","const genres = [\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"영화 & 애니메이션\"\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"예능 프로그램\"\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"스포츠\"\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"동물\"\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"어린이\"\r\n    },\r\n    {\r\n        \"_id\": 6,\r\n        \"name\": \"뉴스\"\r\n    },\r\n    {\r\n        \"_id\": 7,\r\n        \"name\": \"드라마\"\r\n    }\r\n\r\n]\r\n\r\nconst price = [\r\n    {\r\n        \"_id\": 0,\r\n        \"name\": \"전체\",\r\n        \"array\": []\r\n    },\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"1만원 미만\",\r\n        \"array\": [0, 9900]\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"1-2만원대\",\r\n        \"array\": [10000, 29900]\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"3~4만원대\",\r\n        \"array\": [30000, 49900]\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"5만원 이상\",\r\n        \"array\": [50000, 10000000000]\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\nexport {\r\n    genres,\r\n    price\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Avatar, Icon, Col, Row } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport Checkbox from \"./Sections/CheckBox\";\r\nimport Radiobox from \"./Sections/RadioBox\";\r\nimport SearchFeature from \"./Sections/SearchFeature\";\r\nimport { genres, price } from \"./Sections/Datas\";\r\nimport ScrollHorizontal from \"react-scroll-horizontal\";\r\nimport \"./css/LandingPage.css\";\r\nimport HorizontalScroll from \"react-scroll-horizontal\";\r\n\r\nfunction LandingPage() {\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [PostSize, setPostSize] = useState(0);\r\n  const [Filters, setFilters] = useState({\r\n    genres: [],\r\n    price: [],\r\n  });\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  //처음 실행시 getProducts 작동!\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: Skip,\r\n    };\r\n    getProducts(body);\r\n  }, []);\r\n\r\n  //새롭게 아이템들을 가져와줌\r\n  const getProducts = (body) => {\r\n    axios.post(\"/api/product/products\", body).then((response) => {\r\n      if (response.data.success) {\r\n        setProducts(response.data.productInfo);\r\n        setPostSize(response.data.postSize);\r\n      } else {\r\n        alert(\" 상품을 가져오는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  function handleMouseover(e) {\r\n    e.currentTarget.play();\r\n  }\r\n\r\n  function handleMouseout(e) {\r\n    e.currentTarget.pause();\r\n    e.currentTarget.currentTime = 0;\r\n  }\r\n\r\n  const renderCards = Products.map((product, index) => {\r\n    return (\r\n      <div key={index} className=\"tile\">\r\n        {/* <StackGrid> */}\r\n        <div\r\n          id=\"card-video\"\r\n          style={{ backgroundImage: `url(${product.s3thumbnail})` }}\r\n        >\r\n          <a href={`/product/${product._id}`}>\r\n            <video\r\n              src={`${product.filePath}`}\r\n              onMouseOver={handleMouseover}\r\n              onMouseOut={handleMouseout}\r\n              muted\r\n            />\r\n          </a>\r\n        </div>\r\n        <div id=\"card-avatar\">\r\n          <Meta\r\n            avatar={\r\n              <a href={`/videos/${product.writer._id}`}>\r\n                <Avatar src={product.writer.image} />\r\n              </a>\r\n            }\r\n            title={product.title}\r\n          />\r\n          <a href={`/videos/${product.writer._id}`}>\r\n            <span>{product.writer.name}</span>\r\n          </a>\r\n          <span id=\"card-price\">{`${product.price.toLocaleString(\r\n            \"ko-KR\"\r\n          )} 원`}</span>\r\n          <br />\r\n        </div>\r\n        {/* </StackGrid> */}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  //장르 변화 줄때도 getProducts 작동!\r\n  const showFilteredResults = (filters) => {\r\n    let body = {\r\n      skip: 0,\r\n      filters: filters,\r\n    };\r\n    getProducts(body);\r\n    setSkip(0);\r\n  };\r\n\r\n  const handlePrice = (value) => {\r\n    const data = price;\r\n    let array = [];\r\n\r\n    for (let key in data) {\r\n      if (data[key]._id === parseInt(value, 10)) {\r\n        array = data[key].array;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleFilters = (filters, category) => {\r\n    const newFilters = { ...Filters };\r\n    newFilters[category] = filters;\r\n\r\n    if (category === \"price\") {\r\n      let priceValues = handlePrice(filters);\r\n      newFilters[category] = priceValues;\r\n    }\r\n    showFilteredResults(newFilters);\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  //search할 때 getProducts 작동!\r\n  const updateSearchTerm = (newSearchTerm) => {\r\n    let body = {\r\n      skip: 0, //DB에서 처음 상품부터 가져와야 함\r\n      filters: Filters, //현재 genres와 price에 적용된 필터 그대로 적용 + 검색어\r\n      searchTerm: newSearchTerm,\r\n    };\r\n\r\n    setSkip(0);\r\n\r\n    //자식 컴포넌트인 SearchFeature에서 전달해준 값으로 업데이트됨\r\n    setSearchTerm(newSearchTerm);\r\n    getProducts(body); //백엔드에 보내서 처리!\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"filters\"\r\n      style={{ width: \"100%\", paddingTop: \"1em\", borderTop: \"#1C1C1C\" }}\r\n    >\r\n      {/* Filter */}\r\n      {/* <Row gutter={[16, 16]}>\r\n                <Col lg={12} xs={24}>\r\n                    {/* CheckBox */}\r\n      {/* <Checkbox list={genres} handleFilters={filters => handleFilters(filters, \"genres\")} />\r\n                </Col>\r\n                <Col lg={12} xs={24}>\r\n                    {/* RadioBox */}\r\n      {/* <Radiobox list={price} handleFilters={filters => handleFilters(filters, \"price\")} />\r\n                </Col> */}\r\n      {/* </Row> */}\r\n\r\n      {/* Search */}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          paddingBottom: \"1em\",\r\n          margin: \"1em auto\",\r\n          backgroundColor: \"#1C1C1C\",\r\n        }}\r\n      >\r\n        <SearchFeature refreshFunction={updateSearchTerm} />\r\n        <br />\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            padding: \"1em auto\",\r\n            backgroundColor: \"#1C1C1C\",\r\n          }}\r\n        >\r\n          <span id=\"hash\">동물</span>\r\n          <span id=\"hash\">서버</span>\r\n          <span id=\"hash\">수강신청</span>\r\n          <span id=\"hash\">감자</span>\r\n        </div>\r\n        <div\r\n          id=\"drops\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            padding: \"1em auto\",\r\n            backgroundColor: \"#1C1C1C\",\r\n          }}\r\n        >\r\n          <span id=\"dropdown\">전체</span>\r\n          <span id=\"dropdown\">최신순</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Cards */}\r\n      <div id=\"scroll-horizontal\" style={{ height: `43em` }}>\r\n        {/* <StackGrid columnWidth=\"20%\" columnHeight> */}\r\n        <HorizontalScroll>{renderCards}</HorizontalScroll>\r\n        {/* </StackGrid> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { loginUser } from \"../../../../_actions/user_actions\";\r\nimport { registerUser } from \"../../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { error } from \"jquery\";\r\n\r\nfunction LoginGoogle(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const clientId =\r\n    \"868725939307-s3dblc74bco886t7kmimukn9rodb1vrj.apps.googleusercontent.com\";\r\n\r\n  const SCOPE = \"https://www.googleapis.com/auth/youtube.readonly\";\r\n\r\n  async function onSuccess(res) {\r\n    const getChannelId = await axios\r\n      .get(\r\n        `https://www.googleapis.com/youtube/v3/channels?part=id&mine=true&access_token=${res.accessToken}`\r\n      )\r\n      .then((response) => {\r\n        return response.data.items;\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const channelId = getChannelId;\r\n\r\n    const profile = res.getBasicProfile();\r\n\r\n    const dataToSubmit = {\r\n      email: profile.getEmail(),\r\n      image: profile.getImageUrl(),\r\n      name: profile.getName(),\r\n      channelId: channelId,\r\n    };\r\n\r\n    dispatch(registerUser(dataToSubmit)).then((response) => {\r\n      if (response.payload.success) {\r\n        alert(\"안뇽, 나는 쩌비야~~ ><(회원가입 인사말)\");\r\n      }\r\n      dispatch(loginUser(dataToSubmit))\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (response.payload.loginSuccess) {\r\n            alert(\"로그인 성공\");\r\n            props.history.push(\"/\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setTimeout(() => {\r\n            console.log(\"erroer\");\r\n          }, 3000);\r\n        });\r\n    });\r\n  }\r\n\r\n  const onFailure = (res) => {\r\n    alert(\"아이디와 비번이 정확하지 않습니다.\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        clientId={clientId}\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n        scope={SCOPE}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginGoogle);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoginGoogle from \"./sections/LoginGoogle\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    //네브바가 내려와서 위에 문구가 안 보임. 수정필요\r\n    <div>\r\n      <h2>\r\n        쾌적한 우주여행을 위해서는 활성화된 유튜브 채널이 필요합니다!\r\n        <br />\r\n        유튜브채널을 운영중인 구글 계정으로 로그인해주십시오!\r\n      </h2>\r\n\r\n      <LoginGoogle />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          // dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          // handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode} style={{ backgroundColor: \"#1C1C1C\" }}>\r\n      <SubMenu title={<span>Blogs</span>} style={{ border: 0 }}>\r\n        <MenuItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </MenuItemGroup>\r\n        <MenuItemGroup title=\"Board\">\r\n          <Menu.Item key=\"setting:3\">\r\n            <a href=\"/board\">공지사항</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"setting:4\">\r\n            <a href=\"/board/write\">글쓰기</a>\r\n          </Menu.Item>\r\n        </MenuItemGroup>\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu, Icon, Badge } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./Navbar.css\"\r\n// import GoogleLogin from \"../../LoginPage/LoginPage\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        Swal.fire(\"Oops...\", \"로그인에 실패했습니다.\", \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode} style={{ backgroundColor: \"#1C1C1C\" }}>\r\n        <Menu.Item key=\"mail\">\r\n          <button>\r\n            <a href=\"/login\">Login</a>\r\n          </button>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode} style={{ backgroundColor: \"#1C1C1C\" }}>\r\n        {/* 회사 및 서비스 소개 페이지 만들기 */}\r\n        <Menu.Item key=\"about\">\r\n          <a href=\"#\" style={{ color: \"#ffcb39\" }}>\r\n            About\r\n          </a>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"history\">\r\n          <a href=\"/user/history\" style={{ color: \"#ffcb39\" }}>\r\n            History\r\n          </a>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"upload\">\r\n          <a href=\"/product/upload\" style={{ color: \"#ffcb39\" }}>\r\n            Upload\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item id=\"cart\" key=\"cart\">\r\n          <Badge \r\n            count={user.userData && user.userData.cart.length}\r\n            style={{ zIndex: 1,  }}\r\n          >\r\n            <a href=\"/user/cart\" style={{ color: \"#ffcb39\" }}>\r\n              Cart\r\n            </a>\r\n          </Badge>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler} style={{ color: \"#ffcb39\" }}>\r\n            Log out\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { useState } from \"react\";\r\nimport LeftMenu from \"./Sections/LeftMenu\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport Logo from \"./Sections/logo.svg\";\r\nimport \"./Sections/Navbar.css\";\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\r\n    >\r\n      <a href=\"/\">\r\n      <div className=\"menu__logo\">\r\n        <img src={Logo} style={{ marginTop: \"18px\", marginRight: \"10px\" }} />\r\n      </div>\r\n      </a>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './Progress.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({percentage}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"text\">{percentage}%</div>\r\n            <div className=\"progress\">\r\n            <div className=\"bar\"\r\n                role=\"progressbar\"\r\n                style={{width: `${percentage}%`}}>\r\n            {percentage}%\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProgress.propTypes = {\r\n    percentage: PropTypes.number.isRequired\r\n  };\r\n  \r\nexport default Progress;\r\n","import React, { useState } from \"react\";\r\nimport Progress from \"../Progress/Progress\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { Form, Input, Icon } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../utils/Hashtag.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst Genres = [\r\n  { key: 1, value: \"영화 & 애니메이션\" },\r\n  { key: 2, value: \"예능 프로그램\" },\r\n  { key: 3, value: \"스포츠\" },\r\n  { key: 4, value: \"동물\" },\r\n  { key: 5, value: \"어린이\" },\r\n  { key: 6, value: \"뉴스\" },\r\n  { key: 7, value: \"드라마\" },\r\n];\r\n\r\nfunction UploadProductPage(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [Price, setPrice] = useState(0);\r\n  const [Genre, setGenre] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n  const [FilePath, setFilePath] = useState(\"\");\r\n  const [Duration, setDuration] = useState(\"\");\r\n  const [ThumbnailPath, setThumbnailPath] = useState(\"\");\r\n  const [S3thumbnailPath, setS3thumbnailPath] = useState(\"\")\r\n  const [Tags, setTags] = useState([]);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const removeTags = (indexToRemove) => {\r\n    setTags(Tags.filter((_, index) => index !== indexToRemove));\r\n  };\r\n  const addTags = (event) => {\r\n    if (event.keyCode === 32 && event.target.value !== \"\") {\r\n      setTags([...Tags, event.target.value.trim()]); //공백 제거\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const priceChangeHandler = (event) => {\r\n    setPrice(event.currentTarget.value);\r\n  };\r\n\r\n  const genreChangeHandler = (event) => {\r\n    setGenre(event.currentTarget.value);\r\n  };\r\n\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n  \r\n  const resetHandler = (event) => {\r\n    event.preventDefault();\r\n    setImages([]);\r\n    setFilePath(\"\");\r\n    setDuration(\"\");\r\n    setThumbnailPath(\"\");\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setPrice(0);\r\n    setGenre(1);\r\n    setTags([]);\r\n    setProgress(0);\r\n    alert(\"초기화되었습니다.\");\r\n  }\r\n  \r\n  const dropHandler = (files) => {\r\n    setProgress(0);\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\"},\r\n      //프로그레스 바 상태 config에 추가\r\n      onUploadProgress: progressEvent => {\r\n        setProgress(\r\n          parseInt (\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          )\r\n        );\r\n      }\r\n    };\r\n    \r\n    formData.append(\"file\", files[0]);\r\n\r\n    Axios.post(\"/api/product/video\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        let variable = {\r\n          filePath: response.data.filePath,\r\n          fileName: response.data.fileName,\r\n        };\r\n\r\n        setFilePath(response.data.s3VideoPath);\r\n\r\n        Axios.post(\"/api/product/thumbnail\", variable).then((response) => {\r\n          if (response.data.success) {\r\n            setDuration(response.data.fileDuration);\r\n            setThumbnailPath(response.data.filePath);\r\n            setS3thumbnailPath(response.data.s3FilePath)\r\n            setImages((Images) => [...Images, response.data.filePath]);\r\n          } else {\r\n            setProgress(0);\r\n            alert(\"썸네일 생성에 실패했습니다.\");\r\n          }\r\n        });\r\n      } else {\r\n        if(response.data.err === 'not allowed format'){\r\n          alert(\"파일 확장자를 확인해주세요.\")\r\n        } else {\r\n          alert(\"파일을 저장하는데 실패했습니다.\");\r\n        }\r\n        setProgress(0);\r\n      }\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!Title || !Description || !Price || !Genre || Images.length === 0) {\r\n      return alert(\" 모든 값을 넣어주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n  \r\n    const body = {\r\n      //로그인 된 사람의 ID\r\n      writer: user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      price: Price,\r\n      images: Images,\r\n      genres: Genre,\r\n      filePath: FilePath,\r\n      duration: Duration,\r\n      thumbnail: ThumbnailPath,\r\n      s3thumbnail: S3thumbnailPath,\r\n      tags: Tags,\r\n    };\r\n\r\n    Axios.post(\"/api/product\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"상품 업로드에 성공 했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"상품 업로드에 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // const deleteHandler = (image) => {\r\n  //   const currentIndex = Images.indexOf(image);\r\n  //   let newImages = [...Images];\r\n  //   newImages.splice(currentIndex, 1);\r\n  //   setImages(newImages);\r\n  // };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <h2> 동영상 업로드 </h2>\r\n      </div>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* DropZone */}\r\n          <Dropzone\r\n            onDrop={dropHandler}\r\n            multiple={false}\r\n            // maxSize={100000000}\r\n            refreshFunction={updateImages}\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: 336,\r\n                  height: 189,\r\n                  border: \"1px solid lightgray\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n\r\n          {/* <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"350px\",\r\n              height: \"240px\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n          >\r\n            {Images.map((image, index) => (\r\n              <div onClick={() => deleteHandler(image)} key={index}>\r\n                <img\r\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n                  src={`http://localhost:5000/${image}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div> */}\r\n\r\n          {/* {ThumbnailPath && ( //ThumbnailPath가 있을 때만 렌더링\r\n            <div>\r\n              <img\r\n                src={`http://localhost:5000/${ThumbnailPath}`}\r\n                alt=\"thumbnail\"\r\n              />\r\n            </div>\r\n          )} */}\r\n\r\n          {/* 배포용 ( 삭제 X ) */}\r\n          {S3thumbnailPath && ( //ThumbnailPath가 있을 때만 렌더링\r\n            <div>\r\n              <img\r\n                src={`${S3thumbnailPath}`}\r\n                alt=\"thumbnail\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Progress percentage={progress}/>\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <label>가격(원)</label>\r\n        <Input type=\"number\" onChange={priceChangeHandler} value={Price} />\r\n        <br />\r\n        <label>장르</label>\r\n        <br />\r\n        <select onChange={genreChangeHandler} value={Genre}>\r\n          {Genres.map((item) => (\r\n            <option key={item.key} value={item.key}>\r\n              {\" \"}\r\n              {item.value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        <label>태그</label>\r\n        <br />\r\n        <div className=\"box\">\r\n          <div className=\"tags-input\">\r\n            <ul>\r\n              {Tags.map((tag, index) => (\r\n                <li key={index} className=\"tag\">\r\n                  <span>{tag}</span>\r\n                  <span\r\n                    className=\"tag-close-icon\"\r\n                    onClick={() => removeTags(index)}\r\n                  >\r\n                    X\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"스페이스바를 눌러 해시태그를 입력하세요\"\r\n              onKeyUp={(e) => (e.keyCode === 32 ? addTags(e) : null)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button onClick = {resetHandler}>초기화</button>\r\n        <button type=\"submit\">확인</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","import React from \"react\";\r\nimport { Button, Descriptions } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToCart } from \"../../../../_actions/user_actions\";\r\n\r\nfunction ProductInfo(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const clickHandler = () => {\r\n    //필요한 정보를 Cart 필드에다가 넣어 준다.\r\n    dispatch(addToCart(props.detail._id));\r\n    alert(\"카트에 상품이 추가되었습니다.\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Descriptions title=\"Product Info\">\r\n        <Descriptions.Item label=\"Price\">\r\n          {props.detail.price}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Sold\">{props.detail.sold}</Descriptions.Item>\r\n        <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Description\">\r\n          {props.detail.description}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"tags\">\r\n          {props.detail.tags &&\r\n            props.detail.tags.map((tag) => {\r\n              return (\r\n                <a href={`/hashtag/${tag}`}>\r\n                  {\" \"}\r\n                  <li>{tag}</li>{\" \"}\r\n                </a>\r\n              );\r\n            })}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button size=\"large\" shape=\"round\" type=\"danger\" onClick={clickHandler}>\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductInfo from \"./Sections/ProductInfo\";\r\nimport { Row, Col } from \"antd\";\r\nimport Ratio from 'react-ratio';\r\nimport styled from 'styled-components';\r\n\r\nfunction DetailProductPage(props) {\r\n  const productId = props.match.params.productId;\r\n  const [Product, setProduct] = useState({});\r\n\r\n  const DetailTemplate = styled.div`\r\n  video {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n      .then((response) => {\r\n        setProduct(response.data[0]);\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, [productId]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", padding: \"3rem 4rem\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1>{Product.title}</h1>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} sm={24}>\r\n          {/* ProductVideo */}\r\n          <DetailTemplate>\r\n          <Ratio ratio={ 16 / 9 }>\r\n          <video\r\n            style={{backgroundColor: \"black\"}}\r\n            src={`${Product.filePath}`}\r\n            controls\r\n            controlsList=\"nodownload\"\r\n          />\r\n          </Ratio>\r\n        </DetailTemplate>\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          {/* ProductInfo */}\r\n          <ProductInfo detail={Product} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailProductPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Avatar, Icon, Col, Row } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport Checkbox from \"./Sections/CheckBox\";\r\nimport Radiobox from \"./Sections/RadioBox\";\r\nimport SearchFeature from \"./Sections/SearchFeature\";\r\nimport { genres, price } from \"./Sections/Datas\";\r\n\r\nfunction HashTagPage(props) {\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [Limit, setLimit] = useState(8);\r\n  const [PostSize, setPostSize] = useState(0);\r\n  const [Filters, setFilters] = useState({\r\n    genres: [],\r\n    price: [],\r\n  });\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n  const Tag = props.match.params.tag;\r\n\r\n  //처음 실행시 getProducts 작동!\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n\r\n    getProducts(body);\r\n  }, []);\r\n\r\n  //새롭게 아이템들을 가져와줌\r\n  const getProducts = (body) => {\r\n    axios\r\n      .post(`/api/product/products_by_hashtag?tag=${Tag}`, body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (body.loadMore) {\r\n            setProducts([...Products, ...response.data.productInfo]);\r\n          } else {\r\n            setProducts(response.data.productInfo);\r\n          }\r\n          setPostSize(response.data.postSize);\r\n        } else {\r\n          alert(\" 상품들을 가져오는데 실패 했습니다.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // 더보기 눌렀을 때 getProducts 작동!\r\n  const loadMoreHanlder = () => {\r\n    let skip = Skip + Limit;\r\n    let body = {\r\n      skip: skip,\r\n      limit: Limit,\r\n      loadMore: true,\r\n      filters: Filters,\r\n    };\r\n\r\n    getProducts(body);\r\n    setSkip(skip);\r\n  };\r\n\r\n  function handleMouseover(e) {\r\n    e.currentTarget.play();\r\n  }\r\n\r\n  function handleMouseout(e) {\r\n    e.currentTarget.pause();\r\n    e.currentTarget.currentTime = 0;\r\n  }\r\n\r\n  const renderCards = Products.map((product, index) => {\r\n    // var minutes = Math.floor(product.duration / 60);\r\n    // var seconds = Math.floor(product.duration - minutes * 60);\r\n\r\n    return (\r\n      <Col lg={6} md={12} xs={24}>\r\n        <div\r\n          style={{\r\n            overflow: \"hidden\",\r\n            backgroundColor: \"black\",\r\n            width: \"100%\",\r\n            height: \"0px\",\r\n            paddingTop: \"56.25%\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <a href={`/product/${product._id}`}>\r\n            <video\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n              }}\r\n              src={`${product.filePath}`}\r\n              onMouseOver={handleMouseover}\r\n              onMouseOut={handleMouseout}\r\n              muted\r\n            />\r\n            {/* <div className=\"duration\">\r\n                    <span>{minutes} : {seconds}</span>\r\n                </div> */}\r\n          </a>\r\n        </div>\r\n        <br />\r\n        <Meta\r\n          avatar={\r\n            <a href={`/videos/${product.writer._id}`}>\r\n              <Avatar src={product.writer.image} />\r\n            </a>\r\n          }\r\n          title={product.title}\r\n        />\r\n        <a href={`/videos/${product.writer._id}`}>\r\n          <span>{product.writer.name}</span>\r\n        </a>\r\n        <span\r\n          style={{\r\n            marginRight: \"10px\",\r\n            fontWeight: \"500\",\r\n            float: \"right\",\r\n            display: \"inline-block\",\r\n            textAlign: \"right\",\r\n          }}\r\n        >{`${product.price.toLocaleString(\"ko-KR\")} ₩`}</span>\r\n        <br />\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  //장르 변화 줄때도 getProducts 작동!\r\n  const showFilteredResults = (filters) => {\r\n    let body = {\r\n      skip: 0,\r\n      limit: Limit,\r\n      filters: filters,\r\n    };\r\n\r\n    getProducts(body);\r\n    setSkip(0);\r\n  };\r\n\r\n  const handlePrice = (value) => {\r\n    const data = price;\r\n    let array = [];\r\n\r\n    for (let key in data) {\r\n      if (data[key]._id === parseInt(value, 10)) {\r\n        array = data[key].array;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleFilters = (filters, category) => {\r\n    const newFilters = { ...Filters };\r\n\r\n    newFilters[category] = filters;\r\n\r\n    console.log(\"filters\", filters);\r\n\r\n    if (category === \"price\") {\r\n      let priceValues = handlePrice(filters);\r\n      newFilters[category] = priceValues;\r\n    }\r\n    showFilteredResults(newFilters);\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  //search할 때 getProducts 작동!\r\n  const updateSearchTerm = (newSearchTerm) => {\r\n    let body = {\r\n      skip: 0, //DB에서 처음부터 긁어와줘야 됨\r\n      limit: Limit, //8\r\n      filters: Filters, //현재 genres와 price에 적용된 필터 그대로 적용 + 검색어\r\n      searchTerm: newSearchTerm,\r\n    };\r\n\r\n    setSkip(0);\r\n\r\n    //자식 컴포넌트인 SearchFeature에서 전달해준 값으로 업데이트됨\r\n    setSearchTerm(newSearchTerm);\r\n\r\n    getProducts(body); //백엔드에 보내서 처리!\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>\r\n          {\" \"}\r\n          #{Tag} pages <Icon type=\"bulb\" />{\" \"}\r\n        </h2>\r\n      </div>\r\n\r\n      {/* Filter */}\r\n\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} xs={24}>\r\n          {/* CheckBox */}\r\n          <Checkbox\r\n            list={genres}\r\n            handleFilters={(filters) => handleFilters(filters, \"genres\")}\r\n          />\r\n        </Col>\r\n        <Col lg={12} xs={24}>\r\n          {/* RadioBox */}\r\n          <Radiobox\r\n            list={price}\r\n            handleFilters={(filters) => handleFilters(filters, \"price\")}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Search */}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          margin: \"1rem auto\",\r\n        }}\r\n      >\r\n        <SearchFeature refreshFunction={updateSearchTerm} />\r\n      </div>\r\n\r\n      {/* Cards */}\r\n\r\n      <Row gutter={[16, 16]}>{renderCards}</Row>\r\n\r\n      <br />\r\n\r\n      {PostSize >= Limit && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <button onClick={loadMoreHanlder}>더보기</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HashTagPage;\r\n","import React from 'react'\r\nimport \"./UserCardBlock.css\"\r\nfunction UserCardBlock(props) {\r\n\r\n    // const renderCartImage = (images) => {\r\n    //     if (images.length > 0) {\r\n    //         let image = images[0]\r\n    //         return `http://localhost:5000/${image}`\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n    const renderItems = () => (\r\n        props.products && props.products.map((product, index) => (\r\n            <tr key={index}>\r\n                <td>\r\n                    {/* <img style={{ width: '70px' }} alt=\"product\"\r\n                        src={renderCartImage(product.images)} /> */}\r\n                        <img style={{ width: '70px' }} alt=\"product\"\r\n                        src={product.s3thumbnail} />\r\n                        \r\n                </td>\r\n                <td>\r\n                    {product.quantity} EA\r\n                </td>\r\n                <td>\r\n                    $ {product.price}\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.removeItem(product._id)}>\r\n                        Remove \r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product Image</th>\r\n                        <th>Product Quantity</th>\r\n                        <th>Product Price</th>\r\n                        <th>Remove from Cart</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCardBlock\r\n","import React, { useState, useEffect } from 'react';\r\nimport jQuery from 'jquery';\r\nimport axios from \"axios\";\r\n  \r\nfunction Payment(props) {\r\n  const [MerchantId, setMerchantId] = useState('')\r\n  const [OrderName, setOrderName] = useState('')\r\n  const [PG, setPG] = useState('')\r\n  const [PayMethod, setPayMethod] = useState('')\r\n  const [Amount, setAmount] = useState(0)\r\n  const [BuyerTel, setBuyerTel] = useState('')\r\n  const [BuyerName, setBuyerName] = useState('')\r\n  const [BuyerEmail, setBuyerEmail] = useState('')\r\n  const [Saved, setSaved] = useState(false)\r\n\r\n  //모든 주문 정보가 저장된 경우(Saved===true), 리렌더링 후 결제 진행\r\n  useEffect(()=>{\r\n    if(Saved === true){\r\n      /* 1. 가맹점 식별하기 */\r\n      var IMP = window.IMP;\r\n      IMP.init('imp26939383');\r\n\r\n      /* 2. 결제 데이터 정의하기 */\r\n      const param = {\r\n        pg: PG, // PG사\r\n        pay_method: PayMethod, // 결제수단\r\n        merchant_uid: MerchantId, // 주문번호\r\n        amount: Amount,  // 결제금액\r\n        name: OrderName, // 주문명\r\n        buyer_name: BuyerName, // 구매자 이름\r\n        buyer_tel: BuyerTel, // 구매자 전화번호\r\n        buyer_email: BuyerEmail, // 구매자 이메일\r\n\r\n        //모바일 환경 본인인증 후 리디렉션될 URL(imp_uid, merchant_uid, success 정보 전달됨)\r\n        m_redirect_url: \"http://bringcon.shop:3000/payments/complete/mobile\"\r\n      };\r\n\r\n      /* 4. 결제 창 호출하기 */\r\n      IMP.request_pay(param, callback);\r\n    }\r\n    setSaved(false);\r\n  }, [Saved])\r\n  \r\n\r\n  const saveOrder = (data) => {\r\n    //주문 상품 번호 추가해야할듯(Product._id)\r\n    const dataToSave = {\r\n      pg: data.pg,\r\n      payMethod: data.payMethod,\r\n      amount: data.total,\r\n      buyerId: data.userData._id,\r\n      buyerName: data.userData.name,\r\n      buyerEmail: data.userData.email\r\n    }\r\n\r\n     axios.post('/api/users/order', dataToSave)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                setMerchantId(response.data.merchantId)\r\n                setOrderName(response.data.orderName)\r\n                setPG(response.data.pg)\r\n                setPayMethod(response.data.payMethod)\r\n                setAmount(response.data.amount)\r\n                setBuyerTel(response.data.buyerTel)\r\n                setBuyerName(response.data.buyerName)\r\n                setBuyerEmail(response.data.buyerEmail)\r\n                setSaved(true)\r\n            } else {\r\n                alert(\" 주문 정보를 저장하는데 실패했습니다.\")\r\n            }\r\n        })\r\n  }\r\n\r\n  \r\n  function onClickPayment(e) {\r\n    e.preventDefault();\r\n\r\n    //사용자가 결제 버튼 클릭시 해당 주문 정보를 DB에 저장\r\n    saveOrder(props)\r\n  }\r\n\r\n  function onSuccess (data) {\r\n    alert('결제가 완료되었습니다.');\r\n    props.onSuccess(data)\r\n  }\r\n\r\n  /* 3. 콜백 함수 정의하기 */\r\n  function callback(rsp) {\r\n    if (rsp.success) { // 결제 성공 시: 결제 승인 또는 가상계좌 발급에 성공한 경우\r\n      alert('결제 성공');\r\n      // jQuery로 HTTP 요청\r\n      jQuery.ajax({\r\n        url: '/api/payments/complete', //가맹점 서버\r\n        method: \"POST\",\r\n        dataType: \"json\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        data: JSON.stringify({\r\n          imp_uid: rsp.imp_uid, //거래 고유 번호 - 아임포트 서버에서 결제 정보 조회 가능\r\n          merchant_uid: rsp.merchant_uid //가맹점 DB 주문정보 조회 가능 -> 결제 위변조 검증\r\n          //기타 필요한 데이터가 있는 경우 추가 전달\r\n        }),\r\n        error: function(e) {\r\n          console.log(e);\r\n        }  \r\n      })\r\n      .done(function (data) { // 응답 처리\r\n        //step6 서버 응답 처리하기\r\n        //가맹점 서버 결제 API 성공시 로직\r\n        switch(data.status) {\r\n          case \"vbankIssued\":\r\n            // 가상계좌 발급 시 로직\r\n            break;\r\n          case \"success\":\r\n            // 결제 성공 시 로직\r\n            onSuccess(data.payment);\r\n            break;\r\n        }\r\n      })\r\n\r\n    } else {\r\n      alert(`결제 실패: ${rsp.error_msg}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button onClick={onClickPayment}>결제하기</button>\r\n  );\r\n}\r\n\r\nexport default Payment\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../../_actions/user_actions';\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Empty, Result } from 'antd';\r\nimport Payment from '../../utils/Payment';\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n    const [ShowSuccess, setShowSuccess] = useState(false)\r\n    const [PG, setPG] = useState('html5_inicis')\r\n    const [PayMethod, setPayMethod] = useState('card')\r\n\r\n    useEffect(() => {\r\n\r\n        let cartItems = []\r\n        //리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \r\n        if (props.user.userData && props.user.userData.cart) {\r\n            if (props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItems.push(item.id)\r\n                })\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                    .then(response => { calculateTotal(response.payload) })\r\n            }\r\n        }\r\n    }, [props.user.userData, dispatch])\r\n\r\n\r\n    let calculateTotal = (cartDetail) => {\r\n        let total = 0;\r\n\r\n        cartDetail.map(item => {\r\n            total += parseInt(item.price, 10) * item.quantity\r\n        })\r\n\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n\r\n    }\r\n\r\n\r\n    let removeFromCart = (productId) => {\r\n\r\n        dispatch(removeCartItem(productId))\r\n            .then(response => {\r\n\r\n                if (response.payload.productInfo.length <= 0) {\r\n                    setShowTotal(false)\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    const transactionSuccess = (data) => { //자식컴포넌트인 Payment에서 data값을 받아옴\r\n        //onSuccessBuy라는 action 발생시킴!\r\n        dispatch(onSuccessBuy({\r\n            paymentData: data, //결제 성공시 Payment에서 전달해준 정보를 백엔드로 전달해줌\r\n            cartDetail: props.user.cartDetail //리덕스 스토어 안에 있는 CartDetail 정보 전달해줌\r\n        }))\r\n            .then(response => { //백엔드에서 처리 끝나면\r\n                if (response.payload.success) {\r\n                    setShowTotal(false)\r\n                    setShowSuccess(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    //라디오버튼 옵션 변경\r\n    const handleOptionChange = (changeEvent) => {\r\n        setPayMethod(changeEvent.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1>My Cart</h1>\r\n\r\n            <div>\r\n                <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart} />\r\n            </div>\r\n\r\n            {ShowTotal ?\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    <h2>Total Amount: ${Total}</h2>\r\n                </div>\r\n                : ShowSuccess ?\r\n                    // 결제 성공하면 화면에 메시지 보여줌\r\n                    <Result\r\n                        status=\"success\"\r\n                        title=\"Successfully Purchased Items\"\r\n                    />\r\n                    :\r\n                    <>\r\n                        <br />\r\n                        <Empty description={false} />\r\n                    </>\r\n            }\r\n\r\n\r\n            {/* ShowTotal이 있을 때만 결제 버튼을 보여줌\r\n            즉 카트에 상품이 없으면 결제 버튼도 안보임 */}\r\n            {ShowTotal &&\r\n                <div>\r\n                    <form>\r\n                        <div className=\"form-check\">\r\n                            <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"react-tips\"\r\n                                value=\"card\"\r\n                                checked={PayMethod === \"card\"}\r\n                                onChange={handleOptionChange}\r\n                                className=\"form-check-input\"\r\n                            />\r\n                            카드 결제\r\n                            </label>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-check\">\r\n                            <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"react-tips\"\r\n                                value=\"trans\"\r\n                                checked={PayMethod === \"trans\"}\r\n                                onChange={handleOptionChange}\r\n                                className=\"form-check-input\"\r\n                            />\r\n                            실시간 계좌이체\r\n                            </label>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-check\">\r\n                            <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"react-tips\"\r\n                                value=\"phone\"\r\n                                checked={PayMethod === \"phone\"}\r\n                                onChange={handleOptionChange}\r\n                                className=\"form-check-input\"\r\n                            />\r\n                            휴대폰 결제\r\n                            </label>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group\">\r\n                            <Payment\r\n                                pg={PG}\r\n                                payMethod={PayMethod}\r\n                                total={Total}\r\n                                userData={props.user.userData}\r\n                                onSuccess={transactionSuccess}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n        </div>\r\n      ) \r\n}\r\n\r\nexport default CartPage;\r\n","import React, {useState} from 'react';\r\nimport './VerticalMenu.css';\r\nimport Flag from './flag.png';\r\nimport $ from 'jquery';\r\n\r\nexport const VerticalMenu = () => {\r\n\r\n    $(\".component a\").each(\r\n        function(index){\r\n            if(window.location.href === this.href){\r\n                $(this).addClass(\"current\");\r\n            }\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div class=\"component\" style={{width: 100}}>\r\n            <ul>\r\n                <li class=\"profile\" key=\"1\"><a href=\"/\">프로필<span><img src={Flag} style={{width:'12px'}}/></span></a></li>\r\n                <li class=\"history\" key=\"2\"><a href=\"/history\">구매 내역<span><img src={Flag} style={{width:'12px'}}/></span></a></li>\r\n                <li class=\"content\" key=\"3\"><a href=\"/\">내 콘텐츠<span><img src={Flag} style={{width:'12px'}}/></span></a></li>\r\n                <li class=\"like\" key=\"4\"><a href=\"/\">찜한 상품<span><img src={Flag} style={{width:'12px'}}/></span></a></li>\r\n                <li class=\"review\" key=\"5\"><a href=\"/board\">내 후기<span><img src={Flag} style={{width:'12px'}}/></span></a></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerticalMenu;","import React from 'react'\r\nimport axios from \"axios\";\r\nimport VerticalMenu from '../VerticalMenu/VerticalMenu';\r\n\r\nfunction HistoryPage(props) {\r\n    const handleClick = (item) => {\r\n        const data = {product_id: item}\r\n        //다운로드 할 product id를 백엔드로 보내줌\r\n        axios.post('/api/product/download', data)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                window.location.href = response.data.url;\r\n                alert(\"파일이 다운로드되었습니다.\")\r\n            } else {\r\n                alert(\"다운로드에 실패하였습니다.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: '3rem auto' }}>\r\n            <VerticalMenu/>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h1>History</h1>\r\n            </div>\r\n            <br />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Payment Id</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Date of Purchase</th>\r\n                        <th>Download</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n\r\n                    {/* userData와 history가 있으면 */}\r\n                    {props.user.userData && props.user.userData.history &&\r\n                        props.user.userData.history.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.merchantUid}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{item.dateOfPurchase}</td>\r\n                                <td><button onClick={e => { e.preventDefault(); handleClick(item.id)} }>click here :)</button></td>\r\n                            </tr>\r\n                        ))}\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryPage\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass CommunicationChat extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n    componentDidMount(){\r\n        (function(d, m){\r\n            var kommunicateSettings = {\"appId\":\"8fd1cbe61764900527e0430a209b76f5\",\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\r\n            var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\r\n            s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n            var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\r\n            window.kommunicate = m; m._globals = kommunicateSettings;\r\n          })(document, window.kommunicate || {});\r\n    }\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommunicationChat;","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {} from \"jquery.cookie\";\r\n\r\nclass BoardRow extends Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n            {this.props.createdAt.substring(0, 10)}\r\n        </td>\r\n        <td>\r\n          <NavLink\r\n            to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n          >\r\n            {this.props.title}\r\n          </NavLink>\r\n        </td>\r\n        <td>\r\n          {this.props.name}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass BoardForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {boardLists: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBoardList();\r\n  }\r\n\r\n  getBoardList = () => {\r\n    const send_param = {\r\n      //한명의 유저의 게시글만 보고 싶은 경우 id 넘겨줘야함\r\n      // _id: \"60f4f466763852667826c7da\"\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/board/getBoardList\", send_param)\r\n      .then((returnData) => {\r\n        let boardList;\r\n        if (returnData.data.list.length > 0) {\r\n          const boards = returnData.data.list;\r\n          boardList = boards.map((item) => (\r\n            <BoardRow\r\n              key={Date.now() + Math.random() * 500}\r\n              _id={item._id}\r\n              name={item.name}\r\n              createdAt={item.createdAt}\r\n              title={item.title}\r\n            ></BoardRow>\r\n          ));\r\n          this.setState({\r\n            boardLists: boardList,\r\n          });\r\n        } else {\r\n          boardList = (\r\n            <tr>\r\n              <td colSpan=\"3\">작성한 게시글이 존재하지 않습니다.</td>\r\n            </tr>\r\n          );\r\n          this.setState({\r\n            boardLists: boardList,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const divStyle = {\r\n      margin: 50,\r\n\r\n    };\r\n\r\n    return (\r\n      <div style={{width:'60%', margin:'auto'}}>\r\n        <div style={divStyle}>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>날짜</th>\r\n                <th>글 제목</th>\r\n                <th>글쓴이</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.state.boardLists}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardForm;\r\n","import React, {Component} from 'react';\r\nimport BoardForm from './BoardForm';\r\nimport {} from 'jquery.cookie';\r\nimport VerticalMenu from '../VerticalMenu/VerticalMenu';\r\n\r\nclass BodyPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <VerticalMenu/>\r\n                <BoardForm/>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default BodyPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CKEditor } from \"ckeditor4-react\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./css/BoardWrite.css\"\r\n\r\nfunction BoardWriteForm(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Content, setContent] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const contentChangeHandler = (event) => {\r\n    const data = event.editor.getData();\r\n    setContent(data);\r\n  };\r\n\r\n    //게시글 수정하는 경우\r\n    useEffect(() => {\r\n      if(props.location.query !== undefined) {\r\n        setTitle(props.location.query.title)\r\n        setContent(props.location.query.content)\r\n      }\r\n      console.log(props.location.hasOwnProperty('query'))\r\n      console.log(props.location.query)\r\n    }, [])\r\n\r\n  const writeBoardHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!Title || Title.length === 0) {\r\n      return alert(\"제목을 입력해주세요\");\r\n    } else if (!Content || Content.length === 0) {\r\n      return alert(\"내용을 입력해주세요\");\r\n    }\r\n    \r\n    //게시물 수정하는 경우\r\n    if(props.location.hasOwnProperty('query')){\r\n      const body = {\r\n        _id: props.location.query._id,\r\n        title: Title,\r\n        content: Content,\r\n      }\r\n\r\n      axios.post(\"/api/board/update\", body).then((response) => {\r\n        if (response.data.success) {\r\n          console.log(response.data);\r\n          alert(\"게시글 수정에 성공했습니다.\");\r\n          props.history.push(\"/board\");\r\n        } else {\r\n          alert(\"게시글 수정에 실패했습니다.\");\r\n        }\r\n      });\r\n\r\n    } else { //새로운 게시글 올리는 경우\r\n      const body = {\r\n        writer: user.userData._id,\r\n        name: user.userData.name,\r\n        title: Title,\r\n        content: Content,\r\n      };\r\n  \r\n      axios.post(\"/api/board/upload\", body).then((response) => {\r\n        if (response.data.success) {\r\n          console.log(response.data);\r\n          alert(\"게시글 업로드에 성공했습니다.\");\r\n          props.history.push(\"/board\");\r\n        } else {\r\n          alert(\"글쓰기에 실패했습니다.\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const divStyle = {\r\n    margin: 50,\r\n    width: '60%',\r\n    margin: 'auto'\r\n  };\r\n  const titleStyle = {\r\n    marginBottom: 5,\r\n    width: '50%',\r\n  };\r\n  const buttonStyle = {\r\n    marginTop: 5,\r\n  };\r\n\r\n  return (\r\n    <div style={divStyle} className=\"App\">\r\n      <h2>글 쓰기</h2>\r\n      <Form onSubmit={writeBoardHandler}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          style={titleStyle}\r\n          placeholder=\"글 제목\"\r\n          onChange={titleChangeHandler}\r\n          value={Title}\r\n        />\r\n        <CKEditor initData={props.location.hasOwnProperty('query') && props.location.query.content} data={Content} onChange={contentChangeHandler}></CKEditor>\r\n        <Button style={buttonStyle} type=\"submit\" block>\r\n          저장하기\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardWriteForm;\r\n","import React, {Component} from 'react';\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport './css/BoardDetail.css'\r\n\r\nclass BoardDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {board: []};\r\n        this.state = {writer: \"\"};\r\n        this.state = {isSame: false};\r\n      }\r\n    \r\n    componentDidMount() {\r\n        if (this.props.location.query !== undefined) {\r\n            this.getDetail();\r\n        } else {\r\n            window.location.href=\"/board\";\r\n        }\r\n    }\r\n\r\n    deleteBoard = _id => {\r\n        const send_param = {\r\n            _id\r\n        };\r\n\r\n        if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n            axios\r\n                .post(\"/api/board/delete\", send_param)\r\n                //정상!\r\n                .then(returnData => {\r\n                    if(returnData.data.success){\r\n                        alert(\"삭제되었습니다.\");\r\n                        window.location.href=\"/\";\r\n                    } else {\r\n                        alert(\"삭제에 실패했습니다.\")\r\n                    }\r\n                })\r\n                //에러\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    getDetail = () => {\r\n        const send_param = {\r\n            _id: this.props.location.query._id //게시물 고유번호\r\n        };\r\n        const marginBottom = {\r\n            marginBottom: 5\r\n        };\r\n        axios\r\n            .post(\"/api/board/detail\", send_param)\r\n            //정상!\r\n            .then(returnData => {\r\n                if (returnData.data.board[0]) { //해당 게시물이 있으면\r\n                    \r\n                    // 게시물 writer에게만 수정/삭제 버튼 보여주기\r\n                    const {storeUser} = this.props; //현재 로그인한 유저 _id\r\n                    this.setState({writer: returnData.data.board[0].writer}) //게시물 쓴 사람 _id\r\n                    \r\n                    // 로그인 된 상태이고 && 로그인한 유저 === 게시물 쓴 사람이면\r\n                    if(storeUser.hasOwnProperty('_id') && storeUser._id === this.state.writer){\r\n                        this.setState({isSame: true});\r\n                    } else {\r\n                        this.setState({isSame: false});\r\n                    }\r\n\r\n                    const board = (\r\n                        <div style={{width:'60%', margin:'auto'}}>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th id='title' className='content'>{returnData.data.board[0].title}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id='writer' className='content'>\r\n                                            <span>{`Writer  `}</span>\r\n                                            {returnData.data.board[0].name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id='date' className='content'>\r\n                                            <span>{`Date  `}</span>\r\n                                            {returnData.data.board[0].createdAt.substring(0, 10)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className='content' colSpan=\"2\" dangerouslySetInnerHTML={{\r\n                                            __html: returnData.data.board[0].content\r\n                                        }}/>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            <div>\r\n                            <br/>\r\n                        <NavLink\r\n                                to={{\r\n                                    pathname: \"/board/write\",\r\n                                    query: {\r\n                                        title: returnData.data.board[0].title,\r\n                                        content: returnData.data.board[0].content,\r\n                                        _id: this.props.location.query._id\r\n                                    }\r\n                                }}\r\n                        >\r\n                            <Button block style={marginBottom, { display : `${this.state.isSame ? 'inline-block' : 'none'}`}}>\r\n                                글 수정\r\n                            </Button>\r\n                        </NavLink>\r\n                        <Button\r\n                            style={{ display : `${this.state.isSame ? 'inline-block' : 'none'}`}}\r\n                            block\r\n                            onClick={this.deleteBoard.bind(\r\n                                null, this.props.location.query._id\r\n                            )}>\r\n                                글 삭제\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    this.setState({board: board});\r\n                }\r\n            })\r\n            //에러\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const divStyle = {\r\n            margin: 50\r\n        };\r\n\r\n        return <div style={divStyle}>{this.state.board}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    storeUser: state.user.userData\r\n  });\r\n  \r\nexport default connect(mapStateToProps)(BoardDetail)","import React, { useState } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nconst { TextArea } = Input;\r\n\r\nconst Banks = [\r\n  { key: 1, value: \"NH농협\" },\r\n  { key: 2, value: \"KB국민\" },\r\n  { key: 3, value: \"신한\" },\r\n  { key: 4, value: \"우리\" },\r\n  { key: 5, value: \"하나\" },\r\n  { key: 6, value: \"IBK기업\" },\r\n  { key: 7, value: \"SC제일\" },\r\n  { key: 8, value: \"씨티\" },\r\n  { key: 9, value: \"KDB산업\" },\r\n  { key: 10, value: \"SBI저축은행\" },\r\n  { key: 11, value: \"새마을\" },\r\n  { key: 12, value: \"대구\" },\r\n  { key: 13, value: \"광주\" },\r\n  { key: 14, value: \"우체국\" },\r\n  { key: 15, value: \"신협\" },\r\n  { key: 16, value: \"전북\" },\r\n  { key: 17, value: \"경남\" },\r\n  { key: 18, value: \"부산\" },\r\n  { key: 19, value: \"수협\" },\r\n  { key: 20, value: \"제주\" },\r\n  { key: 21, value: \"저축은행\" },\r\n  { key: 22, value: \"산림조합\" },\r\n  { key: 23, value: \"토스뱅크\" },\r\n  { key: 24, value: \"케이뱅크\" },\r\n  { key: 25, value: \"카카오뱅크\" },\r\n  { key: 26, value: \"HSBC\" },\r\n  { key: 27, value: \"중국공상\" },\r\n  { key: 28, value: \"JP모간\" },\r\n  { key: 29, value: \"도이치\" },\r\n  { key: 30, value: \"BNP파리바\" },\r\n  { key: 31, value: \"BOA\" },\r\n  { key: 32, value: \"중국건설\" },\r\n];\r\n\r\nfunction AddAccount(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [Bank, setBank] = useState(1);\r\n  const [Number, setNumber] = useState();\r\n  const [Holder, setHolder] = useState(\"\");\r\n\r\n  const BankChangeHandler = (event) => {\r\n    setBank(event.currentTarget.value);\r\n  };\r\n\r\n  const NumberChangeHandler = (event) => {\r\n    setNumber(event.currentTarget.value);\r\n  };\r\n\r\n  const HolderChangeHandler = (event) => {\r\n    setHolder(event.currentTarget.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!Bank || !Holder || !Number === 0) {\r\n      return alert(\" 모든 값을 넣어주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n\r\n    const body = {\r\n      //로그인 된 사람의 ID\r\n      _id: user.userData._id,\r\n      accountHolder: Holder,\r\n      accountNumber: Number,\r\n      Bank: Banks[Bank].value,\r\n    };\r\n\r\n    Axios.post(\"/api/users/account\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"계좌 업로드에 성공 했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"계좌 업로드에 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"1000px\", margin: \"2rem auto\" }}>\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <h2> 판매자 정보 입력 </h2>\r\n      </div>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <div style={{ justifyContent: \"space-between\" }}>\r\n          <label>예금주</label>\r\n          <Input onChange={HolderChangeHandler} value={Holder} />\r\n          <br />\r\n          <br />\r\n          <label>계좌번호</label>\r\n          <Input type=\"number\" onChange={NumberChangeHandler} value={Number} />\r\n          <br />\r\n          <br />\r\n          <label>은행 : </label>\r\n          <select onChange={BankChangeHandler} value={Bank}>\r\n            {Banks.map((item) => (\r\n              <option key={item.key} value={item.key}>\r\n                {\" \"}\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <button type=\"submit\">제출</button>\r\n\r\n        <br />\r\n        <div>\r\n          [이용약관 15조 9항] 회원의 컴퓨터 오류, 신상정보의 부정확한 기재,\r\n          비밀번호 관리의 소홀, 일치하지 않는 계좌번호 입력, 가입 시 계좌번호\r\n          미확인 등 회원의 귀책사유로 인해 손해가 발생한 경우에 대하여 회사는\r\n          책임을 지지 않습니다.\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAccount;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Button, Form, Input, Icon } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nconst { TextArea } = Input;\r\n\r\nfunction MyPage(props) {\r\n  return (\r\n    <div>\r\n      <h1>my page!</h1>\r\n      <h2>프로필 이미지</h2>\r\n      <img src={props.user.userData && props.user.userData.image}></img>\r\n      <h2>name : {props.user.userData && props.user.userData.name}</h2>\r\n      <a href=\"/user/history\">\r\n        <h2>history link</h2>\r\n      </a>\r\n      <a href=\"/user/cart\">\r\n        <h2>cart link</h2>\r\n      </a>\r\n      <a href=\"\">\r\n        <h2>my videos link</h2>\r\n      </a>\r\n      <h2>\r\n        계좌 번호 :{props.user.userData && props.user.userData.accountNumber}\r\n      </h2>\r\n      <h2>\r\n        예금주 :{props.user.userData && props.user.userData.accountHolder}\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Avatar, Icon, Col, Card, Row, Carousel } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport Checkbox from \"./Sections/CheckBox\";\r\nimport Radiobox from \"./Sections/RadioBox\";\r\nimport SearchFeature from \"./Sections/SearchFeature\";\r\nimport { genres, price } from \"./Sections/Datas\";\r\n\r\nfunction UserVideos(props) {\r\n  const userId = props.match.params.userId;\r\n\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [Limit, setLimit] = useState(8);\r\n  const [PostSize, setPostSize] = useState(0);\r\n  const [Filters, setFilters] = useState({\r\n    genres: [],\r\n    price: [],\r\n  });\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n  //처음 실행시 getProducts 작동!\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n\r\n    getProducts(body);\r\n  }, []);\r\n\r\n  //새롭게 아이템들을 가져와줌\r\n  const getProducts = (body) => {\r\n    axios\r\n      .post(`/api/product/products_by_userId?userId=${userId}`, body)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (body.loadMore) {\r\n            setProducts([...Products, ...response.data.productInfo]);\r\n          } else {\r\n            setProducts(response.data.productInfo);\r\n          }\r\n          setPostSize(response.data.postSize);\r\n        } else {\r\n          alert(\" 상품들을 가져오는데 실패 했습니다.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // 더보기 눌렀을 때 getProducts 작동!\r\n  const loadMoreHanlder = () => {\r\n    let skip = Skip + Limit;\r\n    let body = {\r\n      skip: skip,\r\n      limit: Limit,\r\n      loadMore: true,\r\n      filters: Filters,\r\n    };\r\n\r\n    getProducts(body);\r\n    setSkip(skip);\r\n  };\r\n\r\n  function handleMouseover(e) {\r\n    e.currentTarget.play();\r\n  }\r\n\r\n  function handleMouseout(e) {\r\n    e.currentTarget.pause();\r\n    e.currentTarget.currentTime = 0;\r\n  }\r\n\r\n  //처음 실행시 getProducts 작동!\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n\r\n    getProducts(body);\r\n  }, []);\r\n\r\n  //장르 변화 줄때도 getProducts 작동!\r\n  const showFilteredResults = (filters) => {\r\n    let body = {\r\n      skip: 0,\r\n      limit: Limit,\r\n      filters: filters,\r\n    };\r\n\r\n    getProducts(body);\r\n    setSkip(0);\r\n  };\r\n\r\n  const handlePrice = (value) => {\r\n    const data = price;\r\n    let array = [];\r\n\r\n    for (let key in data) {\r\n      if (data[key]._id === parseInt(value, 10)) {\r\n        array = data[key].array;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleFilters = (filters, category) => {\r\n    const newFilters = { ...Filters };\r\n\r\n    newFilters[category] = filters;\r\n\r\n    console.log(\"filters\", filters);\r\n\r\n    if (category === \"price\") {\r\n      let priceValues = handlePrice(filters);\r\n      newFilters[category] = priceValues;\r\n    }\r\n    showFilteredResults(newFilters);\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  //search할 때 getProducts 작동!\r\n  const updateSearchTerm = (newSearchTerm) => {\r\n    let body = {\r\n      skip: 0, //DB에서 처음부터 긁어와줘야 됨\r\n      limit: Limit, //8\r\n      filters: Filters, //현재 genres와 price에 적용된 필터 그대로 적용 + 검색어\r\n      searchTerm: newSearchTerm,\r\n    };\r\n\r\n    setSkip(0);\r\n\r\n    //자식 컴포넌트인 SearchFeature에서 전달해준 값으로 업데이트됨\r\n    setSearchTerm(newSearchTerm);\r\n\r\n    getProducts(body); //백엔드에 보내서 처리!\r\n  };\r\n\r\n  const renderCards = Products.map((product, index) => {\r\n    // var minutes = Math.floor(product.duration / 60);\r\n    // var seconds = Math.floor(product.duration - minutes * 60);\r\n\r\n    return (\r\n      <Col lg={6} md={12} xs={24} key={index}>\r\n        <div\r\n          style={{\r\n            overflow: \"hidden\",\r\n            backgroundColor: \"black\",\r\n            width: \"100%\",\r\n            height: \"0px\",\r\n            paddingTop: \"56.25%\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <a href={`/product/${product._id}`}>\r\n            <video\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n              }}\r\n              src={`${product.filePath}`}\r\n              onMouseOver={handleMouseover}\r\n              onMouseOut={handleMouseout}\r\n              muted\r\n            />\r\n            {/* <div className=\"duration\">\r\n                <span>{minutes} : {seconds}</span>\r\n            </div> */}\r\n          </a>\r\n        </div>\r\n        <br />\r\n        <Meta\r\n          avatar={\r\n            <a href={`/videos/${product.writer._id}`}>\r\n              <Avatar src={product.writer.image} />\r\n            </a>\r\n          }\r\n          title={product.title}\r\n        />\r\n        <a href={`/videos/${product.writer._id}`}>\r\n          <span>{product.writer.name}</span>\r\n        </a>\r\n        <span\r\n          style={{\r\n            marginRight: \"10px\",\r\n            fontWeight: \"500\",\r\n            float: \"right\",\r\n            display: \"inline-block\",\r\n            textAlign: \"right\",\r\n          }}\r\n        >{`${product.price.toLocaleString(\"ko-KR\")} ₩`}</span>\r\n        <br />\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>props.match.params.userId videos</h1>\r\n        <h2> login_id : {props.user.userData && props.user.userData._id}</h2>\r\n        <h2> query_id : {userId} </h2>\r\n      </div>\r\n\r\n      <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\r\n        {/* Filter */}\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col lg={12} xs={24}>\r\n            {/* CheckBox */}\r\n            <Checkbox\r\n              list={genres}\r\n              handleFilters={(filters) => handleFilters(filters, \"genres\")}\r\n            />\r\n          </Col>\r\n          <Col lg={12} xs={24}>\r\n            {/* RadioBox */}\r\n            <Radiobox\r\n              list={price}\r\n              handleFilters={(filters) => handleFilters(filters, \"price\")}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Search */}\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            margin: \"1rem auto\",\r\n          }}\r\n        >\r\n          <SearchFeature refreshFunction={updateSearchTerm} />\r\n        </div>\r\n\r\n        {/* Cards */}\r\n\r\n        <Row gutter={[16, 16]}>{renderCards}</Row>\r\n\r\n        <br />\r\n\r\n        {PostSize >= Limit && (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <button onClick={loadMoreHanlder}>더보기</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserVideos;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport UploadProductPage from \"./views/UploadProductPage/UploadProductPage.js\";\r\nimport DetailProductPage from \"./views/DetailProductPage/DetailProductPage\";\r\nimport HashTagPage from \"./views/LandingPage/HashTagPage\";\r\nimport CartPage from \"./views/CartPage/CartPage\";\r\nimport HistoryPage from \"./views/HistoryPage/HistoryPage\";\r\nimport CommunicationChat from \"./views/Chatbot/Chat\";\r\nimport BodyPage from \"./views/Board/BodyPage\";\r\nimport BoardWriteForm from \"./views/Board/BoardWriteForm\";\r\nimport BoardDetail from \"./views/Board/BoardDetail\";\r\nimport AddAccount from \"./views/MyPage/AddAccount\";\r\nimport MyPage from \"./views/MyPage/MyPage\";\r\nimport './App.css';\r\nimport UserVideos from \"./views/LandingPage/UserVideos\";\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route\r\n            exact\r\n            path=\"/product/upload\"\r\n            component={Auth(UploadProductPage, true)}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/product/:productId\"\r\n            component={Auth(DetailProductPage, null)}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/hashtag/:tag\"\r\n            component={Auth(HashTagPage, null)}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/videos/:userId\"\r\n            component={Auth(UserVideos, null)}\r\n          />\r\n\r\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\r\n          <Route\r\n            exact\r\n            path=\"/user/history\"\r\n            component={Auth(HistoryPage, true)}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/user/account\"\r\n            component={Auth(AddAccount, true)}\r\n          />\r\n          <Route exact path=\"/user/mypage\" component={Auth(MyPage, true)} />\r\n          <Route exact path=\"/board\" component={Auth(BodyPage, null)} />\r\n          <Route\r\n            exact\r\n            path=\"/board/write\"\r\n            component={Auth(BoardWriteForm, true)}\r\n          ></Route>\r\n          <Route path=\"/board/detail\" component={BoardDetail}></Route>\r\n        </Switch>\r\n        <CommunicationChat />\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\n\r\n//여러개의 Reducer들을 하나로 합쳐서,\r\n//하나의 Reducer로 관리할 수 있게 만들어줌\r\n\r\n//현재는 user하나만 있음!\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    GET_CART_ITEMS,\r\n    REMOVE_CART_ITEM,\r\n    ON_SUCCESS_BUY\r\n} from '../_actions/types';\r\n\r\n\r\n//리듀서는 2개의 인자를 전달받는 JavaScript 함수\r\n//(현재의 state, action)\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return { ...state }\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload\r\n                }\r\n            }\r\n        case GET_CART_ITEMS:\r\n            return { ...state, cartDetail: action.payload }\r\n        case REMOVE_CART_ITEM:\r\n            return {\r\n                ...state, cartDetail: action.payload.productInfo,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload.cart\r\n                }\r\n            }\r\n        case ON_SUCCESS_BUY:\r\n            return {\r\n                ...state, cartDetail: action.payload.cartDetail,\r\n                userData: {\r\n                    ...state.userData, cart: action.payload.cart\r\n                }\r\n            }\r\n\r\n        //어떤 case도 통과되지 못하면 원래 존재했던 state를 반환    \r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            \r\n            // 크롬 앱에서 Redux Devtools를 사용하기 위해 설정(window 변수에 담아줌)\r\n            // -> 사용된 action들, state들 등등 확인 가능\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}